valacware.cryptchat.BuildConfig
valacware.cryptchat.NativeMethods:
    16:16:public void showInputBox(boolean)
valacware.cryptchat.CryptChat:
    public static final int CC_PORT
    public static final java.lang.String CC_HOST
    private static final float CC_PADDING
    private static final float CC_BUBBLE_RADIUS
    174:174:public java.util.TreeMap loadMessages(java.lang.String)
    178:207:public java.util.TreeMap loadMessages(java.lang.String,java.util.TreeMap)
    459:459:public static long bytesToLong(byte[])
    470:470:public static int bytesToInt(byte[])
    481:481:public static short bytesToShort(byte[])
    485:488:public static short bytesToShort(byte[],int)
valacware.cryptchat.FileInStream
valacware.cryptchat.FileOutStream:
    19:20:public void writeInt(int)
valacware.cryptchat.NativeInterface:
    public abstract void showInputBox(boolean)
valacware.cryptchat.R
valacware.cryptchat.R$attr
valacware.cryptchat.R$drawable
valacware.cryptchat.R$userID
valacware.cryptchat.R$layout
valacware.cryptchat.R$string
valacware.cryptchat.R$style
valacware.cryptchat.network.Packet:
    public static final byte P_VERSION
    static final byte P_STATUS
    static final byte P_NEWID
    static final byte P_TEXT
    34:40:public Packet(long,long,int)
    47:48:public void action(valacware.cryptchat.network.ServerInterface,int,byte)
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getLogLevel()
    public abstract void setApplicationLogger(com.badlogic.gdx.ApplicationLogger)
    public abstract com.badlogic.gdx.ApplicationLogger getApplicationLogger()
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
    public abstract com.badlogic.gdx.Preferences getPreferences(java.lang.String)
    public abstract com.badlogic.gdx.utils.Clipboard getClipboard()
    public abstract void exit()
    public abstract void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    public abstract void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.ApplicationLogger:
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
    public abstract com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
    public abstract com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle external(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Game
com.badlogic.gdx.Gdx:
    28:28:public Gdx()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL30Available()
    public abstract com.badlogic.gdx.graphics.GL20 getGL20()
    public abstract com.badlogic.gdx.graphics.GL30 getGL30()
    public abstract int getBackBufferWidth()
    public abstract int getBackBufferHeight()
    public abstract long getFrameId()
    public abstract float getDeltaTime()
    public abstract float getRawDeltaTime()
    public abstract int getFramesPerSecond()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract com.badlogic.gdx.graphics.glutils.GLVersion getGLVersion()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$Monitor getPrimaryMonitor()
    public abstract com.badlogic.gdx.Graphics$Monitor getMonitor()
    public abstract com.badlogic.gdx.Graphics$Monitor[] getMonitors()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes(com.badlogic.gdx.Graphics$Monitor)
    public abstract com.badlogic.gdx.Graphics$DisplayMode getDisplayMode(com.badlogic.gdx.Graphics$Monitor)
    public abstract boolean setFullscreenMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract void setTitle(java.lang.String)
    public abstract void setUndecorated(boolean)
    public abstract void setResizable(boolean)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract void setContinuousRendering(boolean)
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
    public abstract com.badlogic.gdx.graphics.Cursor newCursor(com.badlogic.gdx.graphics.Pixmap,int,int)
    public abstract void setCursor(com.badlogic.gdx.graphics.Cursor)
    public abstract void setSystemCursor(com.badlogic.gdx.graphics.Cursor$SystemCursor)
com.badlogic.gdx.Graphics$GraphicsType
com.badlogic.gdx.Graphics$Monitor
com.badlogic.gdx.Input:
    public abstract float getAccelerometerX()
    public abstract float getAccelerometerY()
    public abstract float getAccelerometerZ()
    public abstract float getGyroscopeX()
    public abstract float getGyroscopeY()
    public abstract float getGyroscopeZ()
    public abstract int getX()
    public abstract int getX(int)
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY()
    public abstract int getY(int)
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean isTouched()
    public abstract boolean justTouched()
    public abstract boolean isTouched(int)
    public abstract boolean isButtonPressed(int)
    public abstract boolean isKeyPressed(int)
    public abstract boolean isKeyJustPressed(int)
    public abstract void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String,java.lang.String)
    public abstract void setOnscreenKeyboardVisible(boolean)
    public abstract void vibrate(int)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract long getCurrentEventTime()
    public abstract void setCatchBackKey(boolean)
    public abstract boolean isCatchBackKey()
    public abstract void setCatchMenuKey(boolean)
    public abstract boolean isCatchMenuKey()
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.Input$Peripheral
com.badlogic.gdx.Input$TextInputListener:
    public abstract void input(java.lang.String)
    public abstract void canceled()
com.badlogic.gdx.InputAdapter
com.badlogic.gdx.InputEventQueue
com.badlogic.gdx.InputMultiplexer
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    public abstract boolean openURI(java.lang.String)
com.badlogic.gdx.Net$HttpMethods
com.badlogic.gdx.Net$HttpRequest
com.badlogic.gdx.Net$HttpResponse
com.badlogic.gdx.Net$HttpResponseListener
com.badlogic.gdx.Net$Protocol
com.badlogic.gdx.Preferences
com.badlogic.gdx.Screen
com.badlogic.gdx.ScreenAdapter
com.badlogic.gdx.Version
com.badlogic.gdx.assets.AssetDescriptor:
    32:33:public AssetDescriptor(java.lang.String,java.lang.Class)
    37:38:public AssetDescriptor(com.badlogic.gdx.files.FileHandle,java.lang.Class)
    47:52:public AssetDescriptor(com.badlogic.gdx.files.FileHandle,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.AssetManager:
    final com.badlogic.gdx.assets.loaders.FileHandleResolver resolver
    88:89:public AssetManager()
    93:94:public AssetManager(com.badlogic.gdx.assets.loaders.FileHandleResolver)
    67:120:public AssetManager(com.badlogic.gdx.assets.loaders.FileHandleResolver,boolean)
    126:126:public com.badlogic.gdx.assets.loaders.FileHandleResolver getFileHandleResolver()
    132:140:public synchronized java.lang.Object get(java.lang.String)
    147:153:public synchronized java.lang.Object get(java.lang.String,java.lang.Class)
    159:165:public synchronized com.badlogic.gdx.utils.Array getAll(java.lang.Class,com.badlogic.gdx.utils.Array)
    171:171:public synchronized java.lang.Object get(com.badlogic.gdx.assets.AssetDescriptor)
    240:246:public synchronized boolean containsAsset(java.lang.Object)
    272:276:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    283:283:public com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class)
    310:311:public synchronized void load(java.lang.String,java.lang.Class)
    363:364:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    390:395:public boolean update(int)
    409:415:public void finishLoadingAsset(java.lang.String)
    587:588:public synchronized void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader)
    596:602:public synchronized void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader)
    606:606:public synchronized int getLoadedAssets()
    611:611:public synchronized int getQueuedAssets()
    616:621:public synchronized float getProgress()
    627:628:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    683:683:public com.badlogic.gdx.utils.Logger getLogger()
    687:688:public void setLogger(com.badlogic.gdx.utils.Logger)
    708:732:public synchronized java.lang.String getDiagnostics()
    737:737:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    742:742:public synchronized com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
    747:747:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.AssetLoader:
    35:37:public AssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    32:33:public AsynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.BitmapFontLoader
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter
com.badlogic.gdx.assets.loaders.CubemapLoader:
    49:53:public CubemapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapLoaderInfo:
    43:43:public CubemapLoader$CubemapLoaderInfo()
com.badlogic.gdx.assets.loaders.I18NBundleLoader
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter
com.badlogic.gdx.assets.loaders.ModelLoader
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters
com.badlogic.gdx.assets.loaders.MusicLoader
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter
com.badlogic.gdx.assets.loaders.ParticleEffectLoader
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter
com.badlogic.gdx.assets.loaders.PixmapLoader
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter
com.badlogic.gdx.assets.loaders.ShaderProgramLoader
com.badlogic.gdx.assets.loaders.ShaderProgramLoader$ShaderProgramParameter
com.badlogic.gdx.assets.loaders.SkinLoader
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter
com.badlogic.gdx.assets.loaders.SoundLoader
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    25:26:public SynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter
com.badlogic.gdx.assets.loaders.TextureLoader:
    48:52:public TextureLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo:
    42:42:public TextureLoader$TextureLoaderInfo()
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ClasspathFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.PrefixFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.audio.AudioDevice
com.badlogic.gdx.audio.AudioRecorder
com.badlogic.gdx.audio.Music:
    public abstract void play()
    public abstract void pause()
    public abstract void stop()
    public abstract boolean isPlaying()
    public abstract void setLooping(boolean)
    public abstract boolean isLooping()
    public abstract void setVolume(float)
    public abstract float getVolume()
    public abstract void setPan(float,float)
    public abstract void setPosition(float)
    public abstract float getPosition()
    public abstract void dispose()
    public abstract void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.audio.Sound
com.badlogic.gdx.backends.android.APKExpansionSupport
com.badlogic.gdx.backends.android.AndroidApplication:
    91:93:public void initialize(com.badlogic.gdx.ApplicationListener)
    103:104:public void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    114:115:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)
    365:365:public long getJavaHeap()
    370:370:public long getNativeHeap()
    375:375:public com.badlogic.gdx.Preferences getPreferences(java.lang.String)
    381:381:public com.badlogic.gdx.utils.Clipboard getClipboard()
    402:408:public void exit()
    417:418:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    442:443:public void setLogLevel(int)
    447:447:public int getLogLevel()
    469:472:public void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
    488:491:public void addAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener)
    495:498:public void removeAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener)
    522:522:public android.view.Window getApplicationWindow()
    527:527:public android.os.Handler getHandler()
    61:61:public bridge synthetic com.badlogic.gdx.Input getInput()
com.badlogic.gdx.backends.android.AndroidApplication$2
com.badlogic.gdx.backends.android.AndroidApplicationBase:
    public static final int MINIMUM_SDK
    public abstract void runOnUiThread(java.lang.Runnable)
    public abstract void startActivity(android.content.Intent)
    public abstract android.view.Window getApplicationWindow()
    public abstract void useImmersiveMode(boolean)
    public abstract android.os.Handler getHandler()
com.badlogic.gdx.backends.android.AndroidApplicationLogger:
    54:55:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidAudio:
    92:95:public com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    101:133:public com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
    147:163:public com.badlogic.gdx.audio.Music newMusic(java.io.FileDescriptor)
    170:188:public com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
    196:199:public com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioDevice
com.badlogic.gdx.backends.android.AndroidAudioRecorder
com.badlogic.gdx.backends.android.AndroidClipboard:
    39:47:public java.lang.String getContents()
    53:59:public void setContents(java.lang.String)
com.badlogic.gdx.backends.android.AndroidDaydream
com.badlogic.gdx.backends.android.AndroidDaydream$1
com.badlogic.gdx.backends.android.AndroidDaydream$2
com.badlogic.gdx.backends.android.AndroidFileHandle:
    56:58:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    84:95:public com.badlogic.gdx.files.FileHandle[] list()
    99:121:public com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter)
    125:146:public com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter)
    150:171:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    224:224:public long lastModified()
    237:237:public android.content.res.AssetFileDescriptor getAssetFileDescriptor()
com.badlogic.gdx.backends.android.AndroidFiles:
    32:41:public AndroidFiles(android.content.res.AssetManager)
    83:83:public com.badlogic.gdx.files.FileHandle external(java.lang.String)
    88:88:public com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    93:93:public com.badlogic.gdx.files.FileHandle local(java.lang.String)
    103:103:public boolean isExternalStorageAvailable()
    113:113:public boolean isLocalStorageAvailable()
    129:135:public boolean setAPKExpansion(int,int)
com.badlogic.gdx.backends.android.AndroidFragmentApplication
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2
com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks
com.badlogic.gdx.backends.android.AndroidGL20:
    public native void glActiveTexture(int)
    public native void glBindAttribLocation(int,int,java.lang.String)
    public native void glBlendColor(float,float,float,float)
    public native void glBlendEquation(int)
    public native void glBlendEquationSeparate(int,int)
    public native void glBlendFuncSeparate(int,int,int,int)
    public native void glClearDepthf(float)
    public native void glClearStencil(int)
    public native void glColorMask(boolean,boolean,boolean,boolean)
    public native void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public native void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public native void glCullFace(int)
    public native void glDeleteBuffers(int,java.nio.IntBuffer)
    public native void glDeleteFramebuffers(int,java.nio.IntBuffer)
    public native void glDeleteRenderbuffers(int,java.nio.IntBuffer)
    public native void glDeleteTextures(int,java.nio.IntBuffer)
    public native void glDepthFunc(int)
    public native void glDepthRangef(float,float)
    public native void glDetachShader(int,int)
    public native void glFinish()
    public native void glFlush()
    public native void glFrontFace(int)
    public native void glGenBuffers(int,java.nio.IntBuffer)
    public native void glGenFramebuffers(int,java.nio.IntBuffer)
    public native void glGenRenderbuffers(int,java.nio.IntBuffer)
    public native void glGenTextures(int,java.nio.IntBuffer)
    public native void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public native void glGetBooleanv(int,java.nio.Buffer)
    public native void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public native int glGetError()
    public native void glGetFloatv(int,java.nio.FloatBuffer)
    public native void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public native void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public native void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public native void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public native void glGetUniformiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public native void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public native void glHint(int,int)
    public native boolean glIsBuffer(int)
    public native boolean glIsEnabled(int)
    public native boolean glIsFramebuffer(int)
    public native boolean glIsProgram(int)
    public native boolean glIsRenderbuffer(int)
    public native boolean glIsShader(int)
    public native boolean glIsTexture(int)
    public native void glLineWidth(float)
    public native void glPolygonOffset(float,float)
    public native void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public native void glReleaseShaderCompiler()
    public native void glSampleCoverage(float,boolean)
    public native void glScissor(int,int,int,int)
    public native void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public native void glStencilFunc(int,int,int)
    public native void glStencilFuncSeparate(int,int,int,int)
    public native void glStencilMask(int)
    public native void glStencilMaskSeparate(int,int)
    public native void glStencilOp(int,int,int)
    public native void glStencilOpSeparate(int,int,int,int)
    public native void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glTexParameteri(int,int,int)
    public native void glTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glUniform1f(int,float)
    public native void glUniform1fv(int,int,java.nio.FloatBuffer)
    public native void glUniform1fv(int,int,float[],int)
    public native void glUniform1iv(int,int,java.nio.IntBuffer)
    public native void glUniform1iv(int,int,int[],int)
    public native void glUniform2f(int,float,float)
    public native void glUniform2fv(int,int,java.nio.FloatBuffer)
    public native void glUniform2fv(int,int,float[],int)
    public native void glUniform2i(int,int,int)
    public native void glUniform2iv(int,int,java.nio.IntBuffer)
    public native void glUniform2iv(int,int,int[],int)
    public native void glUniform3f(int,float,float,float)
    public native void glUniform3fv(int,int,java.nio.FloatBuffer)
    public native void glUniform3fv(int,int,float[],int)
    public native void glUniform3i(int,int,int,int)
    public native void glUniform3iv(int,int,java.nio.IntBuffer)
    public native void glUniform3iv(int,int,int[],int)
    public native void glUniform4f(int,float,float,float,float)
    public native void glUniform4fv(int,int,java.nio.FloatBuffer)
    public native void glUniform4fv(int,int,float[],int)
    public native void glUniform4i(int,int,int,int,int)
    public native void glUniform4iv(int,int,java.nio.IntBuffer)
    public native void glUniform4iv(int,int,int[],int)
    public native void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glUniformMatrix2fv(int,int,boolean,float[],int)
    public native void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glUniformMatrix3fv(int,int,boolean,float[],int)
    public native void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glValidateProgram(int)
    public native void glVertexAttrib1f(int,float)
    public native void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib2f(int,float,float)
    public native void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib3f(int,float,float,float)
    public native void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib4f(int,float,float,float,float)
    public native void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    public native void glViewport(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30:
    26:27:public void glReadBuffer(int)
    31:32:public void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)
    36:37:public void glDrawRangeElements(int,int,int,int,int,int)
    49:50:public void glTexImage3D(int,int,int,int,int,int,int,int,int,int)
    55:56:public void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)
    61:62:public void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)
    67:68:public void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)
    97:98:public void glGenQueries(int,int[],int)
    102:103:public void glGenQueries(int,java.nio.IntBuffer)
    107:108:public void glDeleteQueries(int,int[],int)
    112:113:public void glDeleteQueries(int,java.nio.IntBuffer)
    117:117:public boolean glIsQuery(int)
    122:123:public void glBeginQuery(int,int)
    127:128:public void glEndQuery(int)
    137:138:public void glGetQueryiv(int,int,java.nio.IntBuffer)
    147:148:public void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)
    152:152:public boolean glUnmapBuffer(int)
    157:157:public java.nio.Buffer glGetBufferPointerv(int,int)
    167:168:public void glDrawBuffers(int,java.nio.IntBuffer)
    177:178:public void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)
    187:188:public void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)
    197:198:public void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)
    207:208:public void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)
    217:218:public void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)
    227:228:public void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)
    233:234:public void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)
    238:239:public void glRenderbufferStorageMultisample(int,int,int,int,int)
    243:244:public void glFramebufferTextureLayer(int,int,int,int,int)
    253:254:public void glFlushMappedBufferRange(int,int,int)
    263:264:public void glDeleteVertexArrays(int,int[],int)
    273:274:public void glGenVertexArrays(int,int[],int)
    283:283:public boolean glIsVertexArray(int)
    298:299:public void glBeginTransformFeedback(int)
    303:304:public void glEndTransformFeedback()
    308:309:public void glBindBufferRange(int,int,int,int,int)
    313:314:public void glBindBufferBase(int,int,int)
    318:319:public void glTransformFeedbackVaryings(int,java.lang.String[],int)
    346:347:public void glVertexAttribIPointer(int,int,int,int,int)
    356:357:public void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)
    366:367:public void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)
    371:372:public void glVertexAttribI4i(int,int,int,int,int)
    376:377:public void glVertexAttribI4ui(int,int,int,int,int)
    406:407:public void glGetUniformuiv(int,int,java.nio.IntBuffer)
    411:411:public int glGetFragDataLocation(int,java.lang.String)
    441:442:public void glUniform1uiv(int,int,java.nio.IntBuffer)
    461:462:public void glUniform3uiv(int,int,java.nio.IntBuffer)
    471:472:public void glUniform4uiv(int,int,java.nio.IntBuffer)
    481:482:public void glClearBufferiv(int,int,java.nio.IntBuffer)
    491:492:public void glClearBufferuiv(int,int,java.nio.IntBuffer)
    502:503:public void glClearBufferfv(int,int,java.nio.FloatBuffer)
    507:508:public void glClearBufferfi(int,int,float,int)
    512:512:public java.lang.String glGetStringi(int,int)
    517:518:public void glCopyBufferSubData(int,int,int,int,int)
    528:529:public void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)
    540:541:public void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)
    545:545:public int glGetUniformBlockIndex(int,java.lang.String)
    556:557:public void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)
    570:571:public void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)
    575:575:public java.lang.String glGetActiveUniformBlockName(int,int)
    580:581:public void glUniformBlockBinding(int,int,int)
    585:586:public void glDrawArraysInstanced(int,int,int,int)
    595:596:public void glDrawElementsInstanced(int,int,int,int,int)
    630:631:public void glGetInteger64v(int,java.nio.LongBuffer)
    660:661:public void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)
    665:666:public void glGenSamplers(int,int[],int)
    670:671:public void glGenSamplers(int,java.nio.IntBuffer)
    675:676:public void glDeleteSamplers(int,int[],int)
    680:681:public void glDeleteSamplers(int,java.nio.IntBuffer)
    685:685:public boolean glIsSampler(int)
    690:691:public void glBindSampler(int,int)
    695:696:public void glSamplerParameteri(int,int,int)
    706:707:public void glSamplerParameteriv(int,int,java.nio.IntBuffer)
    711:712:public void glSamplerParameterf(int,int,float)
    721:722:public void glSamplerParameterfv(int,int,java.nio.FloatBuffer)
    732:733:public void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)
    742:743:public void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)
    747:748:public void glVertexAttribDivisor(int,int)
    752:753:public void glBindTransformFeedback(int,int)
    757:758:public void glDeleteTransformFeedbacks(int,int[],int)
    762:763:public void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)
    767:768:public void glGenTransformFeedbacks(int,int[],int)
    772:773:public void glGenTransformFeedbacks(int,java.nio.IntBuffer)
    777:777:public boolean glIsTransformFeedback(int)
    782:783:public void glPauseTransformFeedback()
    787:788:public void glResumeTransformFeedback()
    809:810:public void glProgramParameteri(int,int,int)
    819:820:public void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)
    832:833:public void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics:
    private static final java.lang.String LOG_TAG
    212:212:public com.badlogic.gdx.graphics.GL20 getGL20()
    229:229:public int getBackBufferWidth()
    234:234:public int getBackBufferHeight()
    496:496:public long getFrameId()
    502:502:public float getDeltaTime()
    507:507:public float getRawDeltaTime()
    513:513:public com.badlogic.gdx.Graphics$GraphicsType getType()
    519:519:public com.badlogic.gdx.graphics.glutils.GLVersion getGLVersion()
    525:525:public int getFramesPerSecond()
    553:553:public float getPpiX()
    558:558:public float getPpiY()
    563:563:public float getPpcX()
    568:568:public float getPpcY()
    578:578:public boolean supportsDisplayModeChange()
    583:583:public boolean setFullscreenMode(com.badlogic.gdx.Graphics$DisplayMode)
    588:588:public com.badlogic.gdx.Graphics$Monitor getPrimaryMonitor()
    593:593:public com.badlogic.gdx.Graphics$Monitor getMonitor()
    598:598:public com.badlogic.gdx.Graphics$Monitor[] getMonitors()
    603:603:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes(com.badlogic.gdx.Graphics$Monitor)
    608:608:public com.badlogic.gdx.Graphics$DisplayMode getDisplayMode(com.badlogic.gdx.Graphics$Monitor)
    613:613:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    624:624:public void setTitle(java.lang.String)
    628:630:public void setUndecorated(boolean)
    635:635:public void setResizable(boolean)
    646:646:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    651:651:public void setVSync(boolean)
    686:686:public boolean isFullscreen()
    691:691:public boolean isGL30Available()
    696:696:public com.badlogic.gdx.graphics.GL30 getGL30()
    701:701:public com.badlogic.gdx.graphics.Cursor newCursor(com.badlogic.gdx.graphics.Pixmap,int,int)
    706:706:public void setCursor(com.badlogic.gdx.graphics.Cursor)
    710:710:public void setSystemCursor(com.badlogic.gdx.graphics.Cursor$SystemCursor)
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidMonitor
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2
com.badlogic.gdx.backends.android.AndroidInput:
    public static final int NUM_TOUCHES
    public static final int SUPPORTED_KEYS
    186:186:public float getAccelerometerX()
    191:191:public float getAccelerometerY()
    196:196:public float getAccelerometerZ()
    201:201:public float getGyroscopeX()
    206:206:public float getGyroscopeY()
    211:211:public float getGyroscopeZ()
    216:259:public void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String,java.lang.String)
    263:265:public int getX()
    270:272:public int getY()
    277:279:public int getX(int)
    284:286:public int getY(int)
    290:292:public boolean isTouched(int)
    297:303:public synchronized boolean isKeyPressed(int)
    308:314:public synchronized boolean isKeyJustPressed(int)
    319:328:public boolean isTouched()
    444:445:public void onTap(int,int)
    451:452:public void onDrop(int,int)
    455:473:protected void postTap(int,int)
    568:581:public void setOnscreenKeyboardVisible(boolean)
    585:586:public void setCatchBackKey(boolean)
    590:590:public boolean isCatchBackKey()
    595:596:public void setCatchMenuKey(boolean)
    600:600:public boolean isCatchMenuKey()
    605:606:public void vibrate(int)
    610:611:public void vibrate(long[],int)
    615:616:public void cancelVibrate()
    620:620:public boolean justTouched()
    625:634:public boolean isButtonPressed(int)
    641:647:private void updateOrientation()
    655:656:public void getRotationMatrix(float[])
    660:663:public float getAzimuth()
    668:671:public float getPitch()
    676:679:public float getRoll()
    747:747:public com.badlogic.gdx.InputProcessor getInputProcessor()
    752:760:public boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    832:832:public com.badlogic.gdx.Input$Orientation getNativeOrientation()
    837:837:public void setCursorCatched(boolean)
    841:841:public boolean isCursorCatched()
    846:846:public int getDeltaX()
    851:851:public int getDeltaX(int)
    856:856:public int getDeltaY()
    861:861:public int getDeltaY(int)
    866:866:public void setCursorPosition(int,int)
    870:870:public long getCurrentEventTime()
    874:875:public void addKeyListener(android.view.View$OnKeyListener)
com.badlogic.gdx.backends.android.AndroidInput$3
com.badlogic.gdx.backends.android.AndroidInput$3$1
com.badlogic.gdx.backends.android.AndroidInput$3$1$1
com.badlogic.gdx.backends.android.AndroidInput$3$2
com.badlogic.gdx.backends.android.AndroidInput$3$2$1
com.badlogic.gdx.backends.android.AndroidInput$3$3
com.badlogic.gdx.backends.android.AndroidInput$3$3$1
com.badlogic.gdx.backends.android.AndroidInput$4
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
    static final int TOUCH_SCROLLED
    static final int TOUCH_MOVED
com.badlogic.gdx.backends.android.AndroidInputFactory:
    27:27:public AndroidInputFactory()
com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    54:55:public void addGenericMotionListener(android.view.View$OnGenericMotionListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2
com.badlogic.gdx.backends.android.AndroidMouseHandler:
    67:79:private void logAction(int)
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    107:125:private void logAction(int,int)
com.badlogic.gdx.backends.android.AndroidMusic:
    private float volume
    29:39:AndroidMusic(com.badlogic.gdx.backends.android.AndroidAudio,android.media.MediaPlayer)
    59:65:public boolean isLooping()
    121:123:public void setLooping(boolean)
    127:130:public void setVolume(float)
    134:134:public float getVolume()
    139:151:public void setPan(float,float)
    155:161:public void stop()
    164:176:public void setPosition(float)
    180:181:public float getPosition()
    185:186:public float getDuration()
    191:192:public void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.backends.android.AndroidNet:
    50:51:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    55:56:public void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest)
    60:60:public com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.ServerSocketHints)
    65:65:public com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    70:70:public com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    75:92:public boolean openURI(java.lang.String)
com.badlogic.gdx.backends.android.AndroidNet$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.app.Dialog dialog
    android.widget.TextView textView
    66:83:android.app.Dialog createDialog()
    87:118:public static android.widget.TextView createView(android.content.Context)
    122:167:public void setVisible(boolean)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable
com.badlogic.gdx.backends.android.AndroidPreferences
com.badlogic.gdx.backends.android.AndroidSound
com.badlogic.gdx.backends.android.AndroidVisibilityListener:
    27:42:public void createListener(com.badlogic.gdx.backends.android.AndroidApplicationBase)
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1
com.badlogic.gdx.backends.android.AndroidWallpaperListener
com.badlogic.gdx.backends.android.AndroidZipFileHandle:
    57:57:public android.content.res.AssetFileDescriptor getAssetFileDescriptor()
    85:87:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    100:104:public com.badlogic.gdx.files.FileHandle[] list()
    109:124:public com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter)
    129:144:public com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter)
    149:164:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
com.badlogic.gdx.backends.android.InputProcessorLW
com.badlogic.gdx.backends.android.ZipResourceFile:
    static final java.lang.String LOG_TAG
    static final boolean LOGV
    static final int kEOCDSignature
    static final int kEOCDLen
    static final int kEOCDNumEntries
    static final int kEOCDSize
    static final int kEOCDFileOffset
    static final int kMaxCommentLen
    static final int kMaxEOCDSearch
    static final int kLFHSignature
    static final int kLFHLen
    static final int kLFHNameLen
    static final int kLFHExtraLen
    static final int kCDESignature
    static final int kCDELen
    static final int kCDEMethod
    static final int kCDEModWhen
    static final int kCDECRC
    static final int kCDECompLen
    static final int kCDEUncompLen
    static final int kCDENameLen
    static final int kCDEExtraLen
    static final int kCDECommentLen
    static final int kCDELocalOffset
    static final int kCompressStored
    static final int kCompressDeflated
    static final int kZipEntryAdj
    java.nio.ByteBuffer mLEByteBuffer
    48:48:private static int swapEndian(int)
    54:54:private static int swapEndian(short)
    184:263:public ZipResourceFile(java.lang.String)
    211:212:public com.badlogic.gdx.backends.android.ZipResourceFile$ZipEntryRO[] getAllEntries()
    267:267:private static int read4LE(java.io.RandomAccessFile)
    275:436:void addPatchFile(java.lang.String)
com.badlogic.gdx.backends.android.ZipResourceFile$ZipEntryRO:
    public final java.lang.String mZipFileName
    public long mLocalHdrOffset
    public long mWhenModified
    public long mCRC32
    public long mCompressedLength
    99:117:public ZipResourceFile$ZipEntryRO(java.lang.String,java.io.File,java.lang.String)
    121:137:public void setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)
    175:175:public java.lang.String getZipFileName()
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    private static final boolean DEBUG
    58:59:public GLSurfaceView20(android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    62:66:public GLSurfaceView20(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    247:253:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    256:287:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18:
    private static final boolean DEBUG
    57:61:public GLSurfaceView20API18(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser:
    232:238:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    241:272:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18:
    private static final java.lang.String TAG
    private static final boolean LOG_ATTACH_DETACH
    private static final boolean LOG_THREADS
    private static final boolean LOG_PAUSE_RESUME
    private static final boolean LOG_SURFACE
    private static final boolean LOG_RENDERER
    private static final boolean LOG_RENDERER_DRAW_FRAME
    private static final boolean LOG_EGL
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    234:1980:public GLSurfaceViewAPI18(android.content.Context,android.util.AttributeSet)
    584:585:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread:
    1777:1784:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager:
    private static final int kGLES_20
    private static final java.lang.String kMSM7K_RENDERER_PREFIX
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    private static final int EGL_OPENGL_ES2_BIT
    public static final int EGL_COVERAGE_BUFFERS_NV
    public static final int EGL_COVERAGE_SAMPLES_NV
    private static final java.lang.String TAG
    157:163:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    166:201:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy
com.badlogic.gdx.files.FileHandle:
    61:64:public FileHandle(java.lang.String)
    69:72:public FileHandle(java.io.File)
    151:151:public java.io.BufferedInputStream read(int)
    157:157:public java.io.Reader reader()
    163:168:public java.io.Reader reader(java.lang.String)
    175:175:public java.io.BufferedReader reader(int)
    182:184:public java.io.BufferedReader reader(int,java.lang.String)
    191:191:public java.lang.String readString()
    198:216:public java.lang.String readString(java.lang.String)
    243:256:public int readBytes(byte[],int,int)
    264:272:public java.io.OutputStream write(boolean)
    282:282:public java.io.OutputStream write(boolean,int)
    291:302:public void write(java.io.InputStream,boolean)
    309:309:public java.io.Writer writer(boolean)
    318:330:public java.io.Writer writer(boolean,java.lang.String)
    339:340:public void writeString(java.lang.String,boolean)
    348:357:public void writeString(java.lang.String,boolean,java.lang.String)
    364:372:public void writeBytes(byte[],boolean)
    379:387:public void writeBytes(byte[],int,int,boolean)
    394:400:public com.badlogic.gdx.files.FileHandle[] list()
    409:427:public com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter)
    436:453:public com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter)
    461:477:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    497:498:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    514:517:public void mkdirs()
    535:537:public boolean delete()
    543:545:public boolean deleteDirectory()
    551:552:public void emptyDirectory()
    557:560:public void emptyDirectory(boolean)
    571:585:public void copyTo(com.badlogic.gdx.files.FileHandle)
    591:596:public void moveTo(com.badlogic.gdx.files.FileHandle)
    618:618:public long lastModified()
    642:644:public static com.badlogic.gdx.files.FileHandle tempFile(java.lang.String)
    650:655:public static com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String)
    660:673:private static void emptyDirectory(java.io.File,boolean)
    676:677:private static boolean deleteDirectory(java.io.File)
    682:687:private static void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    690:700:private static void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.graphics.Camera:
    public abstract void update()
    public abstract void update(boolean)
    77:90:public void lookAt(float,float,float)
    95:96:public void lookAt(com.badlogic.gdx.math.Vector3)
    101:103:public void normalizeUp()
    113:115:public void rotate(float,float,float,float)
    123:125:public void rotate(com.badlogic.gdx.math.Vector3,float)
    132:134:public void rotate(com.badlogic.gdx.math.Matrix4)
    141:143:public void rotate(com.badlogic.gdx.math.Quaternion)
    152:158:public void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
    164:166:public void transform(com.badlogic.gdx.math.Matrix4)
    173:174:public void translate(float,float,float)
    179:180:public void translate(com.badlogic.gdx.math.Vector3)
    195:203:public com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3,float,float,float,float)
    214:215:public com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3)
    224:225:public com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3)
    240:244:public com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3,float,float,float,float)
    257:260:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
    268:268:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color:
    97:99:public Color(com.badlogic.gdx.graphics.Color)
    117:121:public com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color)
    129:133:public com.badlogic.gdx.graphics.Color mul(float)
    141:145:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    153:157:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    190:194:public com.badlogic.gdx.graphics.Color set(float,float,float,float)
    202:203:public com.badlogic.gdx.graphics.Color set(int)
    215:219:public com.badlogic.gdx.graphics.Color add(float,float,float,float)
    231:235:public com.badlogic.gdx.graphics.Color sub(float,float,float,float)
    247:251:public com.badlogic.gdx.graphics.Color mul(float,float,float,float)
    260:264:public com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float)
    276:280:public com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float)
    285:288:public com.badlogic.gdx.graphics.Color premultiplyAlpha()
    335:340:public static com.badlogic.gdx.graphics.Color valueOf(java.lang.String)
    352:354:public static float toFloatBits(int,int,int,int)
    361:362:public static float toFloatBits(float,float,float,float)
    373:373:public static int toIntBits(int,int,int,int)
    377:377:public static int alpha(float)
    381:381:public static int luminanceAlpha(float,float)
    385:385:public static int rgb565(float,float,float)
    389:389:public static int rgba4444(float,float,float,float)
    393:393:public static int rgb888(float,float,float)
    401:401:public static int argb8888(float,float,float,float)
    405:405:public static int rgb565(com.badlogic.gdx.graphics.Color)
    409:409:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    413:413:public static int rgb888(com.badlogic.gdx.graphics.Color)
    421:421:public static int argb8888(com.badlogic.gdx.graphics.Color)
    430:433:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    441:445:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    453:456:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    476:480:public static void argb8888ToColor(com.badlogic.gdx.graphics.Color,int)
    485:490:public static void abgr8888ToColor(com.badlogic.gdx.graphics.Color,float)
    494:494:public com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.Colors:
    35:35:public static com.badlogic.gdx.utils.ObjectMap getColors()
    56:56:public static com.badlogic.gdx.graphics.Color put(java.lang.String,com.badlogic.gdx.graphics.Color)
    105:106:private Colors()
com.badlogic.gdx.graphics.Cubemap:
    103:104:public Cubemap(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    109:112:public Cubemap(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    116:117:public Cubemap(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap)
    122:127:public Cubemap(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,boolean)
    131:135:public Cubemap(int,int,int,com.badlogic.gdx.graphics.Pixmap$Format)
    140:147:public Cubemap(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)
    187:187:public int getDepth()
    203:207:private static void addManagedCubemap(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Cubemap)
    278:279:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    294:294:public static int getNumManagedCubemaps()
com.badlogic.gdx.graphics.Cubemap$CubemapSide
com.badlogic.gdx.graphics.Cursor
com.badlogic.gdx.graphics.Cursor$SystemCursor
com.badlogic.gdx.graphics.FPSLogger
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDeleteTextures(int,java.nio.IntBuffer)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract void glGenTextures(int,java.nio.IntBuffer)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glScissor(int,int,int,int)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glViewport(int,int,int,int)
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDeleteBuffers(int,java.nio.IntBuffer)
    public abstract void glDeleteFramebuffers(int,java.nio.IntBuffer)
    public abstract void glDeleteRenderbuffers(int,java.nio.IntBuffer)
    public abstract void glDetachShader(int,int)
    public abstract void glGenBuffers(int,java.nio.IntBuffer)
    public abstract void glGenFramebuffers(int,java.nio.IntBuffer)
    public abstract void glGenRenderbuffers(int,java.nio.IntBuffer)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1fv(int,int,float[],int)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1iv(int,int,int[],int)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2fv(int,int,float[],int)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2iv(int,int,int[],int)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3fv(int,int,float[],int)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3iv(int,int,int[],int)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4fv(int,int,float[],int)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4iv(int,int,int[],int)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,float[],int)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,float[],int)
    public abstract void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30:
    public static final int GL_READ_BUFFER
    public static final int GL_UNPACK_ROW_LENGTH
    public static final int GL_UNPACK_SKIP_ROWS
    public static final int GL_UNPACK_SKIP_PIXELS
    public static final int GL_PACK_ROW_LENGTH
    public static final int GL_PACK_SKIP_ROWS
    public static final int GL_PACK_SKIP_PIXELS
    public static final int GL_COLOR
    public static final int GL_DEPTH
    public static final int GL_STENCIL
    public static final int GL_RED
    public static final int GL_RGB8
    public static final int GL_RGBA8
    public static final int GL_RGB10_A2
    public static final int GL_TEXTURE_BINDING_3D
    public static final int GL_UNPACK_SKIP_IMAGES
    public static final int GL_UNPACK_IMAGE_HEIGHT
    public static final int GL_TEXTURE_3D
    public static final int GL_TEXTURE_WRAP_R
    public static final int GL_MAX_3D_TEXTURE_SIZE
    public static final int GL_UNSIGNED_INT_2_10_10_10_REV
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_TEXTURE_MIN_LOD
    public static final int GL_TEXTURE_MAX_LOD
    public static final int GL_TEXTURE_BASE_LEVEL
    public static final int GL_TEXTURE_MAX_LEVEL
    public static final int GL_MIN
    public static final int GL_MAX
    public static final int GL_DEPTH_COMPONENT24
    public static final int GL_MAX_TEXTURE_LOD_BIAS
    public static final int GL_TEXTURE_COMPARE_MODE
    public static final int GL_TEXTURE_COMPARE_FUNC
    public static final int GL_CURRENT_QUERY
    public static final int GL_QUERY_RESULT
    public static final int GL_QUERY_RESULT_AVAILABLE
    public static final int GL_BUFFER_MAPPED
    public static final int GL_BUFFER_MAP_POINTER
    public static final int GL_STREAM_READ
    public static final int GL_STREAM_COPY
    public static final int GL_STATIC_READ
    public static final int GL_STATIC_COPY
    public static final int GL_DYNAMIC_READ
    public static final int GL_DYNAMIC_COPY
    public static final int GL_MAX_DRAW_BUFFERS
    public static final int GL_DRAW_BUFFER0
    public static final int GL_DRAW_BUFFER1
    public static final int GL_DRAW_BUFFER2
    public static final int GL_DRAW_BUFFER3
    public static final int GL_DRAW_BUFFER4
    public static final int GL_DRAW_BUFFER5
    public static final int GL_DRAW_BUFFER6
    public static final int GL_DRAW_BUFFER7
    public static final int GL_DRAW_BUFFER8
    public static final int GL_DRAW_BUFFER9
    public static final int GL_DRAW_BUFFER10
    public static final int GL_DRAW_BUFFER11
    public static final int GL_DRAW_BUFFER12
    public static final int GL_DRAW_BUFFER13
    public static final int GL_DRAW_BUFFER14
    public static final int GL_DRAW_BUFFER15
    public static final int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
    public static final int GL_MAX_VERTEX_UNIFORM_COMPONENTS
    public static final int GL_SAMPLER_3D
    public static final int GL_SAMPLER_2D_SHADOW
    public static final int GL_FRAGMENT_SHADER_DERIVATIVE_HINT
    public static final int GL_PIXEL_PACK_BUFFER
    public static final int GL_PIXEL_UNPACK_BUFFER
    public static final int GL_PIXEL_PACK_BUFFER_BINDING
    public static final int GL_PIXEL_UNPACK_BUFFER_BINDING
    public static final int GL_FLOAT_MAT2x3
    public static final int GL_FLOAT_MAT2x4
    public static final int GL_FLOAT_MAT3x2
    public static final int GL_FLOAT_MAT3x4
    public static final int GL_FLOAT_MAT4x2
    public static final int GL_FLOAT_MAT4x3
    public static final int GL_SRGB
    public static final int GL_SRGB8
    public static final int GL_SRGB8_ALPHA8
    public static final int GL_COMPARE_REF_TO_TEXTURE
    public static final int GL_MAJOR_VERSION
    public static final int GL_MINOR_VERSION
    public static final int GL_NUM_EXTENSIONS
    public static final int GL_RGBA32F
    public static final int GL_RGB32F
    public static final int GL_RGBA16F
    public static final int GL_RGB16F
    public static final int GL_VERTEX_ATTRIB_ARRAY_INTEGER
    public static final int GL_MAX_ARRAY_TEXTURE_LAYERS
    public static final int GL_MIN_PROGRAM_TEXEL_OFFSET
    public static final int GL_MAX_PROGRAM_TEXEL_OFFSET
    public static final int GL_MAX_VARYING_COMPONENTS
    public static final int GL_TEXTURE_2D_ARRAY
    public static final int GL_TEXTURE_BINDING_2D_ARRAY
    public static final int GL_R11F_G11F_B10F
    public static final int GL_UNSIGNED_INT_10F_11F_11F_REV
    public static final int GL_RGB9_E5
    public static final int GL_UNSIGNED_INT_5_9_9_9_REV
    public static final int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_MODE
    public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
    public static final int GL_TRANSFORM_FEEDBACK_VARYINGS
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_START
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
    public static final int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
    public static final int GL_RASTERIZER_DISCARD
    public static final int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
    public static final int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
    public static final int GL_INTERLEAVED_ATTRIBS
    public static final int GL_SEPARATE_ATTRIBS
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER
    public static final int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
    public static final int GL_RGBA32UI
    public static final int GL_RGB32UI
    public static final int GL_RGBA16UI
    public static final int GL_RGB16UI
    public static final int GL_RGBA8UI
    public static final int GL_RGB8UI
    public static final int GL_RGBA32I
    public static final int GL_RGB32I
    public static final int GL_RGBA16I
    public static final int GL_RGB16I
    public static final int GL_RGBA8I
    public static final int GL_RGB8I
    public static final int GL_RED_INTEGER
    public static final int GL_RGB_INTEGER
    public static final int GL_RGBA_INTEGER
    public static final int GL_SAMPLER_2D_ARRAY
    public static final int GL_SAMPLER_2D_ARRAY_SHADOW
    public static final int GL_SAMPLER_CUBE_SHADOW
    public static final int GL_UNSIGNED_INT_VEC2
    public static final int GL_UNSIGNED_INT_VEC3
    public static final int GL_UNSIGNED_INT_VEC4
    public static final int GL_INT_SAMPLER_2D
    public static final int GL_INT_SAMPLER_3D
    public static final int GL_INT_SAMPLER_CUBE
    public static final int GL_INT_SAMPLER_2D_ARRAY
    public static final int GL_UNSIGNED_INT_SAMPLER_2D
    public static final int GL_UNSIGNED_INT_SAMPLER_3D
    public static final int GL_UNSIGNED_INT_SAMPLER_CUBE
    public static final int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
    public static final int GL_BUFFER_ACCESS_FLAGS
    public static final int GL_BUFFER_MAP_LENGTH
    public static final int GL_BUFFER_MAP_OFFSET
    public static final int GL_DEPTH_COMPONENT32F
    public static final int GL_DEPTH32F_STENCIL8
    public static final int GL_FLOAT_32_UNSIGNED_INT_24_8_REV
    public static final int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
    public static final int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_DEFAULT
    public static final int GL_FRAMEBUFFER_UNDEFINED
    public static final int GL_DEPTH_STENCIL_ATTACHMENT
    public static final int GL_DEPTH_STENCIL
    public static final int GL_UNSIGNED_INT_24_8
    public static final int GL_DEPTH24_STENCIL8
    public static final int GL_UNSIGNED_NORMALIZED
    public static final int GL_DRAW_FRAMEBUFFER_BINDING
    public static final int GL_READ_FRAMEBUFFER
    public static final int GL_DRAW_FRAMEBUFFER
    public static final int GL_READ_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_SAMPLES
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
    public static final int GL_MAX_COLOR_ATTACHMENTS
    public static final int GL_COLOR_ATTACHMENT1
    public static final int GL_COLOR_ATTACHMENT2
    public static final int GL_COLOR_ATTACHMENT3
    public static final int GL_COLOR_ATTACHMENT4
    public static final int GL_COLOR_ATTACHMENT5
    public static final int GL_COLOR_ATTACHMENT6
    public static final int GL_COLOR_ATTACHMENT7
    public static final int GL_COLOR_ATTACHMENT8
    public static final int GL_COLOR_ATTACHMENT9
    public static final int GL_COLOR_ATTACHMENT10
    public static final int GL_COLOR_ATTACHMENT11
    public static final int GL_COLOR_ATTACHMENT12
    public static final int GL_COLOR_ATTACHMENT13
    public static final int GL_COLOR_ATTACHMENT14
    public static final int GL_COLOR_ATTACHMENT15
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
    public static final int GL_MAX_SAMPLES
    public static final int GL_HALF_FLOAT
    public static final int GL_MAP_READ_BIT
    public static final int GL_MAP_WRITE_BIT
    public static final int GL_MAP_INVALIDATE_RANGE_BIT
    public static final int GL_MAP_INVALIDATE_BUFFER_BIT
    public static final int GL_MAP_FLUSH_EXPLICIT_BIT
    public static final int GL_MAP_UNSYNCHRONIZED_BIT
    public static final int GL_RG
    public static final int GL_RG_INTEGER
    public static final int GL_R8
    public static final int GL_RG8
    public static final int GL_R16F
    public static final int GL_R32F
    public static final int GL_RG16F
    public static final int GL_RG32F
    public static final int GL_R8I
    public static final int GL_R8UI
    public static final int GL_R16I
    public static final int GL_R16UI
    public static final int GL_R32I
    public static final int GL_R32UI
    public static final int GL_RG8I
    public static final int GL_RG8UI
    public static final int GL_RG16I
    public static final int GL_RG16UI
    public static final int GL_RG32I
    public static final int GL_RG32UI
    public static final int GL_VERTEX_ARRAY_BINDING
    public static final int GL_R8_SNORM
    public static final int GL_RG8_SNORM
    public static final int GL_RGB8_SNORM
    public static final int GL_RGBA8_SNORM
    public static final int GL_SIGNED_NORMALIZED
    public static final int GL_PRIMITIVE_RESTART_FIXED_INDEX
    public static final int GL_COPY_READ_BUFFER
    public static final int GL_COPY_WRITE_BUFFER
    public static final int GL_COPY_READ_BUFFER_BINDING
    public static final int GL_COPY_WRITE_BUFFER_BINDING
    public static final int GL_UNIFORM_BUFFER
    public static final int GL_UNIFORM_BUFFER_BINDING
    public static final int GL_UNIFORM_BUFFER_START
    public static final int GL_UNIFORM_BUFFER_SIZE
    public static final int GL_MAX_VERTEX_UNIFORM_BLOCKS
    public static final int GL_MAX_FRAGMENT_UNIFORM_BLOCKS
    public static final int GL_MAX_COMBINED_UNIFORM_BLOCKS
    public static final int GL_MAX_UNIFORM_BUFFER_BINDINGS
    public static final int GL_MAX_UNIFORM_BLOCK_SIZE
    public static final int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
    public static final int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
    public static final int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
    public static final int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
    public static final int GL_ACTIVE_UNIFORM_BLOCKS
    public static final int GL_UNIFORM_TYPE
    public static final int GL_UNIFORM_SIZE
    public static final int GL_UNIFORM_NAME_LENGTH
    public static final int GL_UNIFORM_BLOCK_INDEX
    public static final int GL_UNIFORM_OFFSET
    public static final int GL_UNIFORM_ARRAY_STRIDE
    public static final int GL_UNIFORM_MATRIX_STRIDE
    public static final int GL_UNIFORM_IS_ROW_MAJOR
    public static final int GL_UNIFORM_BLOCK_BINDING
    public static final int GL_UNIFORM_BLOCK_DATA_SIZE
    public static final int GL_UNIFORM_BLOCK_NAME_LENGTH
    public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
    public static final int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
    public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
    public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
    public static final int GL_INVALID_INDEX
    public static final int GL_MAX_VERTEX_OUTPUT_COMPONENTS
    public static final int GL_MAX_FRAGMENT_INPUT_COMPONENTS
    public static final int GL_MAX_SERVER_WAIT_TIMEOUT
    public static final int GL_OBJECT_TYPE
    public static final int GL_SYNC_CONDITION
    public static final int GL_SYNC_STATUS
    public static final int GL_SYNC_FLAGS
    public static final int GL_SYNC_FENCE
    public static final int GL_SYNC_GPU_COMMANDS_COMPLETE
    public static final int GL_UNSIGNALED
    public static final int GL_SIGNALED
    public static final int GL_ALREADY_SIGNALED
    public static final int GL_TIMEOUT_EXPIRED
    public static final int GL_CONDITION_SATISFIED
    public static final int GL_WAIT_FAILED
    public static final int GL_SYNC_FLUSH_COMMANDS_BIT
    public static final long GL_TIMEOUT_IGNORED
    public static final int GL_VERTEX_ATTRIB_ARRAY_DIVISOR
    public static final int GL_ANY_SAMPLES_PASSED
    public static final int GL_ANY_SAMPLES_PASSED_CONSERVATIVE
    public static final int GL_SAMPLER_BINDING
    public static final int GL_RGB10_A2UI
    public static final int GL_TEXTURE_SWIZZLE_R
    public static final int GL_TEXTURE_SWIZZLE_G
    public static final int GL_TEXTURE_SWIZZLE_B
    public static final int GL_TEXTURE_SWIZZLE_A
    public static final int GL_GREEN
    public static final int GL_BLUE
    public static final int GL_INT_2_10_10_10_REV
    public static final int GL_TRANSFORM_FEEDBACK
    public static final int GL_TRANSFORM_FEEDBACK_PAUSED
    public static final int GL_TRANSFORM_FEEDBACK_ACTIVE
    public static final int GL_TRANSFORM_FEEDBACK_BINDING
    public static final int GL_PROGRAM_BINARY_RETRIEVABLE_HINT
    public static final int GL_PROGRAM_BINARY_LENGTH
    public static final int GL_NUM_PROGRAM_BINARY_FORMATS
    public static final int GL_PROGRAM_BINARY_FORMATS
    public static final int GL_COMPRESSED_R11_EAC
    public static final int GL_COMPRESSED_SIGNED_R11_EAC
    public static final int GL_COMPRESSED_RG11_EAC
    public static final int GL_COMPRESSED_SIGNED_RG11_EAC
    public static final int GL_COMPRESSED_RGB8_ETC2
    public static final int GL_COMPRESSED_SRGB8_ETC2
    public static final int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
    public static final int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
    public static final int GL_COMPRESSED_RGBA8_ETC2_EAC
    public static final int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
    public static final int GL_TEXTURE_IMMUTABLE_FORMAT
    public static final int GL_MAX_ELEMENT_INDEX
    public static final int GL_NUM_SAMPLE_COUNTS
    public static final int GL_TEXTURE_IMMUTABLE_LEVELS
    public abstract void glReadBuffer(int)
    public abstract void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)
    public abstract void glDrawRangeElements(int,int,int,int,int,int)
    public abstract void glTexImage3D(int,int,int,int,int,int,int,int,int,int)
    public abstract void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)
    public abstract void glGenQueries(int,int[],int)
    public abstract void glGenQueries(int,java.nio.IntBuffer)
    public abstract void glDeleteQueries(int,int[],int)
    public abstract void glDeleteQueries(int,java.nio.IntBuffer)
    public abstract boolean glIsQuery(int)
    public abstract void glBeginQuery(int,int)
    public abstract void glEndQuery(int)
    public abstract void glGetQueryiv(int,int,java.nio.IntBuffer)
    public abstract void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)
    public abstract boolean glUnmapBuffer(int)
    public abstract java.nio.Buffer glGetBufferPointerv(int,int)
    public abstract void glDrawBuffers(int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)
    public abstract void glRenderbufferStorageMultisample(int,int,int,int,int)
    public abstract void glFramebufferTextureLayer(int,int,int,int,int)
    public abstract void glFlushMappedBufferRange(int,int,int)
    public abstract void glDeleteVertexArrays(int,int[],int)
    public abstract void glGenVertexArrays(int,int[],int)
    public abstract boolean glIsVertexArray(int)
    public abstract void glBeginTransformFeedback(int)
    public abstract void glEndTransformFeedback()
    public abstract void glBindBufferRange(int,int,int,int,int)
    public abstract void glBindBufferBase(int,int,int)
    public abstract void glTransformFeedbackVaryings(int,java.lang.String[],int)
    public abstract void glVertexAttribIPointer(int,int,int,int,int)
    public abstract void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)
    public abstract void glVertexAttribI4i(int,int,int,int,int)
    public abstract void glVertexAttribI4ui(int,int,int,int,int)
    public abstract void glGetUniformuiv(int,int,java.nio.IntBuffer)
    public abstract int glGetFragDataLocation(int,java.lang.String)
    public abstract void glUniform1uiv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3uiv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4uiv(int,int,java.nio.IntBuffer)
    public abstract void glClearBufferiv(int,int,java.nio.IntBuffer)
    public abstract void glClearBufferuiv(int,int,java.nio.IntBuffer)
    public abstract void glClearBufferfv(int,int,java.nio.FloatBuffer)
    public abstract void glClearBufferfi(int,int,float,int)
    public abstract java.lang.String glGetStringi(int,int)
    public abstract void glCopyBufferSubData(int,int,int,int,int)
    public abstract void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)
    public abstract void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)
    public abstract int glGetUniformBlockIndex(int,java.lang.String)
    public abstract void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)
    public abstract java.lang.String glGetActiveUniformBlockName(int,int)
    public abstract void glUniformBlockBinding(int,int,int)
    public abstract void glDrawArraysInstanced(int,int,int,int)
    public abstract void glDrawElementsInstanced(int,int,int,int,int)
    public abstract void glGetInteger64v(int,java.nio.LongBuffer)
    public abstract void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)
    public abstract void glGenSamplers(int,int[],int)
    public abstract void glGenSamplers(int,java.nio.IntBuffer)
    public abstract void glDeleteSamplers(int,int[],int)
    public abstract void glDeleteSamplers(int,java.nio.IntBuffer)
    public abstract boolean glIsSampler(int)
    public abstract void glBindSampler(int,int)
    public abstract void glSamplerParameteri(int,int,int)
    public abstract void glSamplerParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glSamplerParameterf(int,int,float)
    public abstract void glSamplerParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glVertexAttribDivisor(int,int)
    public abstract void glBindTransformFeedback(int,int)
    public abstract void glDeleteTransformFeedbacks(int,int[],int)
    public abstract void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)
    public abstract void glGenTransformFeedbacks(int,int[],int)
    public abstract void glGenTransformFeedbacks(int,java.nio.IntBuffer)
    public abstract boolean glIsTransformFeedback(int)
    public abstract void glPauseTransformFeedback()
    public abstract void glResumeTransformFeedback()
    public abstract void glProgramParameteri(int,int,int)
    public abstract void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)
    public abstract void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)
    public abstract void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GLTexture:
    public abstract int getDepth()
    public abstract boolean isManaged()
    72:74:public void bind(int)
    105:106:public void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
    138:139:public void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter)
com.badlogic.gdx.graphics.Mesh:
    77:608:protected Mesh(com.badlogic.gdx.graphics.glutils.VertexData,com.badlogic.gdx.graphics.glutils.IndexData,boolean)
    77:608:public Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    77:608:public Mesh(boolean,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    185:187:public com.badlogic.gdx.graphics.Mesh setVertices(float[])
    206:206:public com.badlogic.gdx.graphics.Mesh updateVertices(int,float[])
    215:216:public com.badlogic.gdx.graphics.Mesh updateVertices(int,float[],int,int)
    222:222:public float[] getVertices(float[])
    230:230:public float[] getVertices(int,float[])
    238:238:public float[] getVertices(int,int,float[])
    249:263:public float[] getVertices(int,int,float[],int)
    283:285:public com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int)
    291:292:public void getIndices(short[])
    299:300:public void getIndices(short[],int)
    308:309:public void getIndices(int,short[],int)
    318:329:public void getIndices(int,int,short[],int)
    343:343:public int getMaxVertices()
    348:348:public int getMaxIndices()
    353:353:public int getVertexSize()
    363:364:public void setAutoBind(boolean)
    531:531:public java.nio.FloatBuffer getVerticesBuffer()
    539:541:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    549:579:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    587:587:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    596:596:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    605:605:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    616:682:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    694:735:public float calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)
    747:747:public float calculateRadius(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)
    756:756:public float calculateRadius(com.badlogic.gdx.math.Vector3,int,int,com.badlogic.gdx.math.Matrix4)
    767:767:public float calculateRadius(float,float,float,int,int)
    776:776:public float calculateRadius(com.badlogic.gdx.math.Vector3,int,int)
    785:785:public float calculateRadius(float,float,float)
    792:792:public float calculateRadius(com.badlogic.gdx.math.Vector3)
    842:877:public void scale(float,float,float)
    884:885:public void transform(com.badlogic.gdx.math.Matrix4)
    889:901:public void transform(com.badlogic.gdx.math.Matrix4,int,int)
    914:948:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    955:956:public void transformUV(com.badlogic.gdx.math.Matrix3)
    960:971:protected void transformUV(com.badlogic.gdx.math.Matrix3,int,int)
    981:994:public static void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int)
    1005:1085:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    1092:1092:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.OrthographicCamera:
    73:74:public void setToOrtho(boolean)
    82:93:public void setToOrtho(boolean,float,float)
    98:99:public void rotate(float)
    105:106:public void translate(float,float)
    111:112:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera
com.badlogic.gdx.graphics.Pixmap:
    114:115:public static void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
    99:137:public Pixmap(byte[],int,int)
    99:156:public Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
    161:162:public void setColor(int)
    199:200:public void drawLine(int,int,int,int)
    210:211:public void drawRectangle(int,int,int,int)
    261:262:public void fillRectangle(int,int,int,int)
    270:271:public void drawCircle(int,int,int)
    279:280:public void fillCircle(int,int,int)
    291:292:public void fillTriangle(int,int,int,int,int,int)
    300:300:public int getPixel(int,int)
    325:326:public void drawPixel(int,int)
com.badlogic.gdx.graphics.Pixmap$Filter
com.badlogic.gdx.graphics.PixmapIO:
    42:42:public PixmapIO()
    48:49:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
    62:72:public static void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    75:75:private PixmapIO$CIM()
    81:117:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG
com.badlogic.gdx.graphics.PixmapIO$PNG$ChunkBuffer
com.badlogic.gdx.graphics.Texture:
    88:89:public Texture(java.lang.String)
    92:93:public Texture(com.badlogic.gdx.files.FileHandle)
    104:105:public Texture(com.badlogic.gdx.graphics.Pixmap)
    108:109:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    112:113:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    116:117:public Texture(int,int,com.badlogic.gdx.graphics.Pixmap$Format)
    160:165:public void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
    179:179:public int getDepth()
    279:280:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    295:295:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.Texture$TextureFilter:
    63:63:public boolean isMipMap()
com.badlogic.gdx.graphics.TextureArray:
    41:42:public varargs TextureArray(java.lang.String[])
    45:46:public varargs TextureArray(com.badlogic.gdx.files.FileHandle[])
    49:50:public varargs TextureArray(boolean,com.badlogic.gdx.files.FileHandle[])
    53:54:public varargs TextureArray(boolean,com.badlogic.gdx.graphics.Pixmap$Format,com.badlogic.gdx.files.FileHandle[])
    57:66:public TextureArray(com.badlogic.gdx.graphics.TextureArrayData)
    69:73:private static varargs com.badlogic.gdx.files.FileHandle[] getInternalHandles(java.lang.String[])
    105:105:public int getDepth()
    121:125:private static void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.TextureArray)
    145:152:public static java.lang.String getManagedStatus()
    157:157:public static int getNumManagedTextureArrays()
com.badlogic.gdx.graphics.TextureArrayData$Factory
com.badlogic.gdx.graphics.TextureData$Factory:
    87:87:public TextureData$Factory()
    90:90:public static com.badlogic.gdx.graphics.TextureData loadFromFile(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.VertexAttribute:
    97:98:protected VertexAttribute(int,int,int,boolean,java.lang.String)
    137:137:public static com.badlogic.gdx.graphics.VertexAttribute Position()
    141:141:public static com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
    145:145:public static com.badlogic.gdx.graphics.VertexAttribute Normal()
    149:149:public static com.badlogic.gdx.graphics.VertexAttribute ColorPacked()
    153:153:public static com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
    157:157:public static com.badlogic.gdx.graphics.VertexAttribute Tangent()
    161:161:public static com.badlogic.gdx.graphics.VertexAttribute Binormal()
    165:165:public static com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int)
com.badlogic.gdx.graphics.VertexAttributes:
    70:72:public int getOffset(int,int)
    78:78:public int getOffset(int)
    84:87:public com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator:
    220:221:public void reset()
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.g2d.Animation
com.badlogic.gdx.graphics.g2d.Animation$1
com.badlogic.gdx.graphics.g2d.Animation$PlayMode
com.badlogic.gdx.graphics.g2d.Batch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    public abstract void begin()
    public abstract void end()
    public abstract void setColor(com.badlogic.gdx.graphics.Color)
    public abstract void setColor(float,float,float,float)
    public abstract void setColor(float)
    public abstract com.badlogic.gdx.graphics.Color getColor()
    public abstract float getPackedColor()
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    public abstract void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2)
    public abstract void flush()
    public abstract void disableBlending()
    public abstract void enableBlending()
    public abstract void setBlendFunction(int,int)
    public abstract int getBlendSrcFunc()
    public abstract int getBlendDstFunc()
    public abstract com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    public abstract com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    public abstract void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    public abstract void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    public abstract void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract com.badlogic.gdx.graphics.glutils.ShaderProgram getShader()
    public abstract boolean isBlendingEnabled()
    public abstract boolean isDrawing()
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    80:82:public BitmapFont(boolean)
    93:94:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion)
    103:104:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    109:110:public BitmapFont(com.badlogic.gdx.files.FileHandle)
    116:117:public BitmapFont(com.badlogic.gdx.files.FileHandle,boolean)
    123:124:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    191:194:public com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float)
    200:203:public com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,int,boolean)
    210:213:public com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,int,int,float,int,boolean)
    220:223:public com.badlogic.gdx.graphics.g2d.GlyphLayout draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,int,int,float,int,boolean,java.lang.String)
    236:236:public com.badlogic.gdx.graphics.Color getColor()
    241:242:public void setColor(com.badlogic.gdx.graphics.Color)
    246:247:public void setColor(float,float,float,float)
    250:250:public float getScaleX()
    254:254:public float getScaleY()
    261:261:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
    273:273:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int)
    278:278:public float getLineHeight()
    283:283:public float getSpaceWidth()
    288:288:public float getXHeight()
    294:294:public float getCapHeight()
    299:299:public float getAscent()
    305:305:public float getDescent()
    310:310:public boolean isFlipped()
    324:338:public void setFixedWidthGlyphs(java.lang.CharSequence)
    342:344:public void setUseIntegerPositions(boolean)
    348:348:public boolean usesIntegerPositions()
    355:355:public com.badlogic.gdx.graphics.g2d.BitmapFontCache getCache()
    360:360:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    365:365:public boolean ownsTexture()
    425:428:static int indexOf(java.lang.CharSequence,char,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    public float cursorX
    737:739:public void setLineHeight(float)
    760:761:public boolean hasGlyph(char)
    851:851:public java.lang.String getImagePath(int)
    855:855:public java.lang.String[] getImagePaths()
    859:859:public com.badlogic.gdx.files.FileHandle getFontFile()
    868:885:public void setScale(float,float)
    891:892:public void setScale(float)
    898:899:public void scale(float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    59:60:public BitmapFontCache(com.badlogic.gdx.graphics.g2d.BitmapFont)
    85:86:public void setPosition(float,float)
    92:108:public void translate(float,float)
    112:137:public void tint(com.badlogic.gdx.graphics.Color)
    141:158:public void setAlphas(float)
    162:167:public void setColors(float)
    171:172:public void setColors(com.badlogic.gdx.graphics.Color)
    176:178:public void setColors(float,float,float,float)
    183:184:public void setColors(com.badlogic.gdx.graphics.Color,int,int)
    189:214:public void setColors(float,int,int)
    219:219:public com.badlogic.gdx.graphics.Color getColor()
    224:225:public void setColor(com.badlogic.gdx.graphics.Color)
    229:230:public void setColor(float,float,float,float)
    243:275:public void draw(com.badlogic.gdx.graphics.g2d.Batch,int,int)
    278:289:public void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
    437:438:public com.badlogic.gdx.graphics.g2d.GlyphLayout setText(java.lang.CharSequence,float,float)
    444:445:public com.badlogic.gdx.graphics.g2d.GlyphLayout setText(java.lang.CharSequence,float,float,float,int,boolean)
    452:453:public com.badlogic.gdx.graphics.g2d.GlyphLayout setText(java.lang.CharSequence,float,float,int,int,float,int,boolean)
    460:461:public com.badlogic.gdx.graphics.g2d.GlyphLayout setText(java.lang.CharSequence,float,float,int,int,float,int,boolean,java.lang.String)
    467:469:public void setText(com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float)
    474:474:public com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float)
    480:480:public com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float,float,int,boolean)
    487:487:public com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float,int,int,float,int,boolean)
    503:507:public com.badlogic.gdx.graphics.g2d.GlyphLayout addText(java.lang.CharSequence,float,float,int,int,float,int,boolean,java.lang.String)
    517:517:public float getX()
    522:522:public float getY()
    526:526:public com.badlogic.gdx.graphics.g2d.BitmapFont getFont()
    532:533:public void setUseIntegerPositions(boolean)
    537:537:public boolean usesIntegerPositions()
    541:541:public float[] getVertices()
    545:545:public float[] getVertices(int)
    549:549:public int getVertexCount(int)
    553:553:public com.badlogic.gdx.utils.Array getLayouts()
com.badlogic.gdx.graphics.g2d.CpuSpriteBatch
com.badlogic.gdx.graphics.g2d.DistanceFieldFont
com.badlogic.gdx.graphics.g2d.DistanceFieldFont$DistanceFieldFontCache
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    81:123:public Gdx2DPixmap(java.io.InputStream,int)
    81:142:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    170:170:public int getPixel(int,int)
    174:175:public void drawLine(int,int,int,int,int)
    178:179:public void drawRect(int,int,int,int,int)
    182:183:public void drawCircle(int,int,int,int)
    186:187:public void fillRect(int,int,int,int,int)
    190:191:public void fillCircle(int,int,int,int)
    194:195:public void fillTriangle(int,int,int,int,int,int,int)
    208:210:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    216:218:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    251:265:public java.lang.String getFormatString()
    private static native int getPixel(long,int,int)
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
    private static native void fillRect(long,int,int,int,int,int)
    private static native void fillCircle(long,int,int,int,int)
    private static native void fillTriangle(long,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.GlyphLayout:
    35:47:public GlyphLayout(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence)
    35:52:public GlyphLayout(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,com.badlogic.gdx.graphics.Color,float,int,boolean)
    35:58:public GlyphLayout(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)
    63:64:public void setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence)
com.badlogic.gdx.graphics.g2d.NinePatch
com.badlogic.gdx.graphics.g2d.ParticleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEmitter
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue
com.badlogic.gdx.graphics.g2d.PixmapPacker:
    111:112:public PixmapPacker(int,int,com.badlogic.gdx.graphics.Pixmap$Format,int,boolean)
    132:133:public void sort(com.badlogic.gdx.utils.Array)
    216:220:public synchronized com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String)
    227:231:public synchronized int getPageIndex(java.lang.String)
    248:250:public synchronized com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    259:272:public synchronized void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    290:290:public int getPageWidth()
    294:295:public void setPageWidth(int)
    298:298:public int getPageHeight()
    302:303:public void setPageHeight(int)
    306:306:public com.badlogic.gdx.graphics.Pixmap$Format getPageFormat()
    310:311:public void setPageFormat(com.badlogic.gdx.graphics.Pixmap$Format)
    314:314:public int getPadding()
    318:319:public void setPadding(int)
    322:322:public boolean getDuplicateBorder()
    326:327:public void setDuplicateBorder(boolean)
    330:330:public boolean getPackToTexture()
com.badlogic.gdx.graphics.g2d.PixmapPacker$GuillotineStrategy:
    java.util.Comparator comparator
    412:420:public void sort(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g2d.PixmapPacker$GuillotineStrategy$1
com.badlogic.gdx.graphics.g2d.PixmapPacker$PackStrategy:
    public abstract void sort(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    359:359:public com.badlogic.gdx.graphics.Pixmap getPixmap()
    363:363:public com.badlogic.gdx.utils.OrderedMap getRects()
    369:369:public com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.PixmapPacker$SkylineStrategy:
    java.util.Comparator comparator
    516:524:public void sort(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g2d.PixmapPacker$SkylineStrategy$1
com.badlogic.gdx.graphics.g2d.PixmapPackerIO
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$1
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters
com.badlogic.gdx.graphics.g2d.PolygonRegion
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.RepeatablePolygonSprite
com.badlogic.gdx.graphics.g2d.Sprite
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    84:85:public SpriteBatch(int)
    199:200:public void setColor(com.badlogic.gdx.graphics.Color)
    204:206:public void setColor(float,float,float,float)
    210:211:public void setColor(float)
    215:221:public com.badlogic.gdx.graphics.Color getColor()
    226:226:public float getPackedColor()
    232:358:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    363:417:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    421:463:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    467:505:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
    509:510:public void draw(com.badlogic.gdx.graphics.Texture,float,float)
    514:556:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    590:591:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    595:638:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
    643:758:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    763:894:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    898:950:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2)
    982:985:public void disableBlending()
    989:992:public void enableBlending()
    996:1000:public void setBlendFunction(int,int)
    1004:1004:public int getBlendSrcFunc()
    1009:1009:public int getBlendDstFunc()
    1020:1020:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    1025:1025:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    1037:1040:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1062:1077:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    1081:1084:public com.badlogic.gdx.graphics.glutils.ShaderProgram getShader()
    1093:1093:public boolean isDrawing()
com.badlogic.gdx.graphics.g2d.SpriteCache
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    private final com.badlogic.gdx.utils.Array regions
    52:206:public TextureAtlas()
    211:212:public TextureAtlas(java.lang.String)
    216:217:public TextureAtlas(com.badlogic.gdx.files.FileHandle)
    222:223:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    226:227:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    231:232:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    52:237:public TextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    240:273:private void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    277:284:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    289:290:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    295:295:public com.badlogic.gdx.utils.Array getRegions()
    302:304:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String)
    311:317:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    323:328:public com.badlogic.gdx.utils.Array findRegions(java.lang.String)
    335:338:public com.badlogic.gdx.utils.Array createSprites()
    346:348:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
    356:362:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    370:375:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    379:388:private com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    396:406:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
    411:411:public com.badlogic.gdx.utils.ObjectSet getTextures()
    433:436:static java.lang.String readValue(java.io.BufferedReader)
    441:452:static int readTuple(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    public int index
    public int packedWidth
    public int originalWidth
    public boolean rotate
    public int[] splits
    public int[] pads
    497:502:public TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    504:516:public TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    521:524:public void flip(boolean,boolean)
    529:529:public float getRotatedPackedWidth()
    535:535:public float getRotatedPackedHeight()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    final com.badlogic.gdx.utils.Array pages
    final com.badlogic.gdx.utils.Array regions
    99:193:public TextureAtlas$TextureAtlasData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    196:196:public com.badlogic.gdx.utils.Array getPages()
    200:200:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    public com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page
    public java.lang.String name
    public float offsetX
    public float offsetY
    public int originalWidth
    public int originalHeight
    public boolean rotate
    public int left
    public int top
    public int width
    public int height
    public boolean flip
    public int[] splits
    public int[] pads
com.badlogic.gdx.graphics.g2d.TextureRegion:
    44:47:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
    51:54:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    62:64:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    69:71:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    112:114:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    118:120:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    127:128:public void setTexture(com.badlogic.gdx.graphics.Texture)
    131:131:public float getU()
    135:137:public void setU(float)
    140:140:public float getV()
    144:146:public void setV(float)
    149:149:public float getU2()
    153:155:public void setU2(float)
    158:158:public float getV2()
    162:164:public void setV2(float)
    167:167:public int getRegionX()
    171:172:public void setRegionX(int)
    175:175:public int getRegionY()
    179:180:public void setRegionY(int)
    188:193:public void setRegionWidth(int)
    201:206:public void setRegionHeight(int)
    209:219:public void flip(boolean,boolean)
    222:222:public boolean isFlipX()
    226:226:public boolean isFlipY()
    234:244:public void scroll(float,float)
    255:272:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    284:285:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    33:33:public FreeType()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    689:689:public int getNumGray()
    private static native int getNumGray(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    159:159:public int getStyleFlags()
    private static native int getStyleFlags(long)
    175:175:public int getAscender()
    private static native int getAscender(long)
    183:183:public int getDescender()
    private static native int getDescender(long)
    191:191:public int getHeight()
    private static native int getHeight(long)
    207:207:public int getMaxAdvanceHeight()
    private static native int getMaxAdvanceHeight(long)
    215:215:public int getUnderlinePosition()
    private static native int getUnderlinePosition(long)
    223:223:public int getUnderlineThickness()
    private static native int getUnderlineThickness(long)
    231:231:public boolean selectSize(int)
    private static native boolean selectSize(long,int)
    239:239:public boolean setCharSize(int,int,int,int)
    private static native boolean setCharSize(long,int,int,int,int)
    255:255:public boolean loadGlyph(int,int)
    private static native boolean loadGlyph(long,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    711:711:public int getWidth()
    private static native int getWidth(long)
    727:727:public int getHoriBearingX()
    private static native int getHoriBearingX(long)
    735:735:public int getHoriBearingY()
    private static native int getHoriBearingY(long)
    751:751:public int getVertBearingX()
    private static native int getVertBearingX(long)
    759:759:public int getVertBearingY()
    private static native int getVertBearingY(long)
    767:767:public int getVertAdvance()
    private static native int getVertAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    413:413:public int getLinearHoriAdvance()
    private static native int getLinearHoriAdvance(long)
    421:421:public int getLinearVertAdvance()
    private static native int getLinearVertAdvance(long)
    429:429:public int getAdvanceX()
    private static native int getAdvanceX(long)
    437:437:public int getAdvanceY()
    private static native int getAdvanceY(long)
    453:453:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap()
    private static native long getBitmap(long)
    462:462:public int getBitmapLeft()
    private static native int getBitmapLeft(long)
    470:470:public int getBitmapTop()
    private static native int getBitmapTop(long)
    478:478:public boolean renderGlyph(int)
    private static native boolean renderGlyph(long,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library:
    79:80:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newFace(com.badlogic.gdx.files.FileHandle,int)
    84:86:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newMemoryFace(byte[],int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    335:335:public int getXppem()
    private static native int getXppem(long)
    343:343:public int getYppem()
    private static native int getYppem(long)
    351:351:public int getXScale()
    private static native int getXscale(long)
    359:359:public int getYscale()
    private static native int getYscale(long)
    391:391:public int getMaxAdvance()
    private static native int getMaxAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator:
    public static final java.lang.String DEFAULT_CHARS
    public static final int NO_MAXIMUM
    194:198:public int scaleForPixelHeight(int)
    206:213:public int scaleForPixelWidth(int,int)
    222:222:public int scaleToFitSquare(int,int,int)
    233:281:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap generateGlyphAndBitmap(int,int,boolean)
    287:289:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int)
    293:293:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter)
    631:632:public static void setMaxTextureSize(int)
    637:637:public static int getMaxTextureSize()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild
com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader
com.badlogic.gdx.graphics.g2d.freetype.FreetypeFontLoader$FreeTypeFontLoaderParameter
com.badlogic.gdx.graphics.g3d.Attribute
com.badlogic.gdx.graphics.g3d.Attributes
com.badlogic.gdx.graphics.g3d.Environment
com.badlogic.gdx.graphics.g3d.Material
com.badlogic.gdx.graphics.g3d.Model
com.badlogic.gdx.graphics.g3d.ModelBatch
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool
com.badlogic.gdx.graphics.g3d.ModelCache
com.badlogic.gdx.graphics.g3d.ModelCache$1
com.badlogic.gdx.graphics.g3d.ModelCache$2
com.badlogic.gdx.graphics.g3d.ModelCache$MeshPool
com.badlogic.gdx.graphics.g3d.ModelCache$SimpleMeshPool
com.badlogic.gdx.graphics.g3d.ModelCache$Sorter
com.badlogic.gdx.graphics.g3d.ModelCache$TightMeshPool
com.badlogic.gdx.graphics.g3d.ModelInstance
com.badlogic.gdx.graphics.g3d.Renderable
com.badlogic.gdx.graphics.g3d.RenderableProvider
com.badlogic.gdx.graphics.g3d.Shader
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute
com.badlogic.gdx.graphics.g3d.attributes.DirectionalLightsAttribute
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute
com.badlogic.gdx.graphics.g3d.attributes.PointLightsAttribute
com.badlogic.gdx.graphics.g3d.attributes.SpotLightsAttribute
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap
com.badlogic.gdx.graphics.g3d.environment.BaseLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight
com.badlogic.gdx.graphics.g3d.environment.PointLight
com.badlogic.gdx.graphics.g3d.environment.ShadowMap
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics
com.badlogic.gdx.graphics.g3d.environment.SpotLight
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader
com.badlogic.gdx.graphics.g3d.loader.MtlLoader
com.badlogic.gdx.graphics.g3d.loader.ObjLoader
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters
com.badlogic.gdx.graphics.g3d.model.Animation
com.badlogic.gdx.graphics.g3d.model.MeshPart
com.badlogic.gdx.graphics.g3d.model.Node
com.badlogic.gdx.graphics.g3d.model.NodeAnimation
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe
com.badlogic.gdx.graphics.g3d.model.NodePart
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation
com.badlogic.gdx.graphics.g3d.model.data.ModelData
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart
com.badlogic.gdx.graphics.g3d.model.data.ModelNode
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture
com.badlogic.gdx.graphics.g3d.particles.ParallelArray
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelInitializer
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$IntChannel
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ColorInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation2dInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation3dInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ScaleInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$TextureRegionInitializer
com.badlogic.gdx.graphics.g3d.particles.ParticleController
com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent
com.badlogic.gdx.graphics.g3d.particles.ParticleEffect
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectSaveParameter
com.badlogic.gdx.graphics.g3d.particles.ParticleShader
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Config
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Inputs
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$1
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$2
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$3
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$4
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$5
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$6
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$Distance
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$None
com.badlogic.gdx.graphics.g3d.particles.ParticleSystem
com.badlogic.gdx.graphics.g3d.particles.ResourceData
com.badlogic.gdx.graphics.g3d.particles.ResourceData$AssetData
com.badlogic.gdx.graphics.g3d.particles.ResourceData$Configurable
com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$Config
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$RenderablePool
com.badlogic.gdx.graphics.g3d.particles.batches.BufferedParticleBatch
com.badlogic.gdx.graphics.g3d.particles.batches.ModelInstanceParticleBatch
com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch
com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch
com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter
com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter
com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Angular
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$BrownianAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$CentripetalAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$FaceDirection
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$PolarAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational2D
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational3D
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Strength
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$TangentialAcceleration
com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random$ModelInstancePool
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random$ParticleControllerPool
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Animated
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$AspectTextureRegion
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Random
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Single
com.badlogic.gdx.graphics.g3d.particles.influencers.ScaleInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer
com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer
com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardRenderer
com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceRenderer
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerControllerRenderer
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer
com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData
com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteRenderer
com.badlogic.gdx.graphics.g3d.particles.values.CylinderSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.EllipseSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.GradientColorValue
com.badlogic.gdx.graphics.g3d.particles.values.LineSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue$Triangle
com.badlogic.gdx.graphics.g3d.particles.values.NumericValue
com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue
com.badlogic.gdx.graphics.g3d.particles.values.PointSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide
com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue
com.badlogic.gdx.graphics.g3d.particles.values.RectangleSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue
com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.UnweightedMeshSpawnShapeValue
com.badlogic.gdx.graphics.g3d.particles.values.WeightMeshSpawnShapeValue
com.badlogic.gdx.graphics.g3d.shaders.BaseShader
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$GlobalSetter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$LocalSetter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$20
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$21
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$22
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$23
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$24
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$25
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$26
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$27
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$28
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$29
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones
com.badlogic.gdx.graphics.g3d.shaders.DepthShader
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config
com.badlogic.gdx.graphics.g3d.utils.AnimationController
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider
com.badlogic.gdx.graphics.g3d.utils.CameraInputController
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder
com.badlogic.gdx.graphics.g3d.utils.RenderContext
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider
com.badlogic.gdx.graphics.g3d.utils.ShapeCache
com.badlogic.gdx.graphics.g3d.utils.TextureBinder
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor
com.badlogic.gdx.graphics.g3d.utils.TextureProvider
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.ArrowShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.BaseShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.BaseShapeBuilder$1
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.BaseShapeBuilder$2
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.BoxShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.CapsuleShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.ConeShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.CylinderShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.EllipseShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.FrustumShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.PatchShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.RenderableShapeBuilder
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.RenderableShapeBuilder$RenderablePool
com.badlogic.gdx.graphics.g3d.utils.shapebuilders.SphereShapeBuilder
com.badlogic.gdx.graphics.glutils.ETC1:
    38:38:public ETC1()
    152:155:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    163:166:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    103:124:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    37:38:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    32:48:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FacedCubemapData
com.badlogic.gdx.graphics.glutils.FileTextureArrayData
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer
com.badlogic.gdx.graphics.glutils.FloatTextureData
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    46:47:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    58:59:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean,boolean)
    85:86:public static void unbind()
com.badlogic.gdx.graphics.glutils.FrameBufferCubemap
com.badlogic.gdx.graphics.glutils.GLFrameBuffer:
    private static final int GL_DEPTH24_STENCIL8_OES
    101:102:public GLFrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    112:121:public GLFrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean,boolean)
    259:260:public void bind()
    264:265:public static void unbind()
    269:271:public void begin()
    275:276:protected void setFrameBufferViewport()
    280:281:public void end()
    290:292:public void end(int,int,int,int)
    296:296:public com.badlogic.gdx.graphics.GLTexture getColorBufferTexture()
    301:301:public int getFramebufferHandle()
    306:306:public int getDepthBufferHandle()
    311:311:public int getStencilBufferHandle()
    316:316:protected int getDepthStencilPackedBuffer()
    321:321:public int getHeight()
    326:326:public int getWidth()
    331:331:public int getDepth()
    335:339:private static void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.GLFrameBuffer)
com.badlogic.gdx.graphics.glutils.GLVersion:
    99:99:public com.badlogic.gdx.graphics.glutils.GLVersion$Type getType()
    109:109:public int getMinorVersion()
    114:114:public int getReleaseVersion()
    119:119:public java.lang.String getVendorString()
    125:125:public java.lang.String getRendererString()
    136:136:public boolean isVersionEqualToOrHigher(int,int)
    141:141:public java.lang.String getDebugVersionString()
com.badlogic.gdx.graphics.glutils.HdpiUtils
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    public abstract void flush()
    public abstract void color(com.badlogic.gdx.graphics.Color)
    public abstract void color(float,float,float,float)
    public abstract void texCoord(float,float)
    public abstract void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    51:53:public ImmediateModeRenderer20(boolean,boolean,int)
    97:100:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    108:109:public void color(com.badlogic.gdx.graphics.Color)
    112:113:public void color(float,float,float,float)
    120:124:public void texCoord(float,float)
    127:131:public void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.IndexArray:
    78:86:public void setIndices(java.nio.ShortBuffer)
    90:94:public void updateIndices(int,short[],int,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    63:64:public IndexBufferObject(int)
    124:137:public void setIndices(java.nio.ShortBuffer)
    141:152:public void updateIndices(int,short[],int,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    47:78:public IndexBufferObjectSubData(int)
    125:138:public void setIndices(java.nio.ShortBuffer)
    142:153:public void updateIndices(int,short[],int,int)
com.badlogic.gdx.graphics.glutils.IndexData:
    public abstract void setIndices(java.nio.ShortBuffer)
    public abstract void updateIndices(int,short[],int,int)
com.badlogic.gdx.graphics.glutils.KTXTextureData:
    private static final int GL_TEXTURE_1D
    private static final int GL_TEXTURE_3D
    private static final int GL_TEXTURE_1D_ARRAY_EXT
    private static final int GL_TEXTURE_2D_ARRAY_EXT
    310:310:public int getNumberOfMipMapLevels()
    314:314:public int getNumberOfFaces()
    318:318:public int getGlInternalFormat()
    322:341:public java.nio.ByteBuffer getData(int,int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    29:31:private MipMapGenerator()
    36:37:public static void setUseHardwareMipMap(boolean)
    43:44:public static void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.glutils.MipMapTextureData
com.badlogic.gdx.graphics.glutils.PixmapTextureData:
    32:33:public PixmapTextureData(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    178:179:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    323:326:public void setUniformi(int,int)
    334:338:public void setUniformi(java.lang.String,int,int)
    341:344:public void setUniformi(int,int,int)
    353:357:public void setUniformi(java.lang.String,int,int,int)
    360:363:public void setUniformi(int,int,int,int)
    373:377:public void setUniformi(java.lang.String,int,int,int,int)
    380:383:public void setUniformi(int,int,int,int,int)
    390:394:public void setUniformf(java.lang.String,float)
    397:400:public void setUniformf(int,float)
    408:412:public void setUniformf(java.lang.String,float,float)
    415:418:public void setUniformf(int,float,float)
    427:431:public void setUniformf(java.lang.String,float,float,float)
    434:437:public void setUniformf(int,float,float,float)
    447:451:public void setUniformf(java.lang.String,float,float,float,float)
    454:457:public void setUniformf(int,float,float,float,float)
    460:464:public void setUniform1fv(java.lang.String,float[],int,int)
    467:470:public void setUniform1fv(int,float[],int,int)
    473:477:public void setUniform2fv(java.lang.String,float[],int,int)
    480:483:public void setUniform2fv(int,float[],int,int)
    486:490:public void setUniform3fv(java.lang.String,float[],int,int)
    493:496:public void setUniform3fv(int,float[],int,int)
    499:503:public void setUniform4fv(java.lang.String,float[],int,int)
    506:509:public void setUniform4fv(int,float[],int,int)
    529:530:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    543:544:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    552:553:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    556:557:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    560:563:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    571:576:public void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    584:589:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    592:595:public void setUniformMatrix4fv(int,float[],int,int)
    598:599:public void setUniformMatrix4fv(java.lang.String,float[],int,int)
    606:607:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    610:611:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    618:619:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    622:623:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    630:631:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    634:635:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    647:652:public void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer)
    670:675:public void setVertexAttribute(java.lang.String,int,int,boolean,int,int)
    729:734:public void enableVertexAttribute(java.lang.String)
    788:788:public static int getNumManagedShaderPrograms()
    799:802:public void setAttributef(java.lang.String,float,float,float,float)
    850:850:public boolean hasAttribute(java.lang.String)
    856:856:public int getAttributeType(java.lang.String)
    868:868:public int getAttributeSize(java.lang.String)
    874:874:public boolean hasUniform(java.lang.String)
    880:880:public int getUniformType(java.lang.String)
    886:886:public int getUniformLocation(java.lang.String)
    892:892:public int getUniformSize(java.lang.String)
    897:897:public java.lang.String[] getAttributes()
    902:902:public java.lang.String[] getUniforms()
    907:907:public java.lang.String getVertexShaderSource()
    912:912:public java.lang.String getFragmentShaderSource()
com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    131:132:public void setColor(float,float,float,float)
    135:135:public com.badlogic.gdx.graphics.Color getColor()
    139:140:public void updateMatrices()
    151:151:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    155:157:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    161:161:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    166:168:public void identity()
    172:174:public void translate(float,float,float)
    178:180:public void rotate(float,float,float,float)
    184:186:public void scale(float,float,float)
    192:193:public void setAutoShapeType(boolean)
    198:200:public void begin()
    217:222:public void set(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType)
    226:238:public void point(float,float,float)
    242:243:public final void line(float,float,float,float,float,float)
    247:248:public final void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    252:253:public final void line(float,float,float,float)
    257:258:public final void line(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    262:263:public final void line(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    268:277:public void line(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    281:328:public void curve(float,float,float,float,float,float,float,float,int)
    332:357:public void triangle(float,float,float,float,float,float)
    361:385:public void triangle(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    435:472:public void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    478:479:public void rect(float,float,float,float,float,float,float,float,float)
    489:556:public void rect(float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    605:647:public void rectLine(float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    651:652:public void rectLine(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
    657:815:public void box(float,float,float,float,float,float)
    819:821:public void x(float,float,float)
    825:826:public void x(com.badlogic.gdx.math.Vector2,float)
    945:946:public void ellipse(float,float,float,float)
    950:978:public void ellipse(float,float,float,float,int)
    982:983:public void ellipse(float,float,float,float,float)
    987:1025:public void ellipse(float,float,float,float,float,int)
    1030:1031:public void cone(float,float,float,float,float)
    1035:1100:public void cone(float,float,float,float,float,int)
    1104:1132:public void polygon(float[],int,int)
    1136:1137:public void polygon(float[])
    1141:1161:public void polyline(float[],int,int)
    1165:1166:public void polyline(float[])
    1202:1205:public void flush()
    1209:1209:public com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType()
    1213:1213:public com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer getRenderer()
    1218:1218:public boolean isDrawing()
com.badlogic.gdx.graphics.glutils.VertexArray:
    70:70:public java.nio.FloatBuffer getBuffer()
    79:79:public int getNumMaxVertices()
    91:95:public void updateVertices(int,float[],int,int)
    99:100:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    149:150:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    60:91:protected VertexBufferObject(int,java.nio.ByteBuffer,boolean,com.badlogic.gdx.graphics.VertexAttributes)
    105:105:public int getNumMaxVertices()
    110:111:public java.nio.FloatBuffer getBuffer()
    154:161:public void updateVertices(int,float[],int,int)
    166:166:protected int getUsage()
    180:181:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    225:226:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    101:101:public int getNumMaxVertices()
    106:107:public java.nio.FloatBuffer getBuffer()
    137:147:public void updateVertices(int,float[],int,int)
    154:155:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    198:199:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    237:237:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO:
    93:93:public int getNumMaxVertices()
    98:99:public java.nio.FloatBuffer getBuffer()
    120:127:public void updateVertices(int,float[],int,int)
    136:137:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    226:227:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumMaxVertices()
    public abstract void updateVertices(int,float[],int,int)
    public abstract java.nio.FloatBuffer getBuffer()
    public abstract void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.profiling.GL20Profiler
com.badlogic.gdx.graphics.profiling.GL30Profiler
com.badlogic.gdx.graphics.profiling.GLErrorListener
com.badlogic.gdx.graphics.profiling.GLErrorListener$1
com.badlogic.gdx.graphics.profiling.GLErrorListener$2
com.badlogic.gdx.graphics.profiling.GLProfiler
com.badlogic.gdx.input.GestureDetector
com.badlogic.gdx.input.GestureDetector$1
com.badlogic.gdx.input.GestureDetector$GestureAdapter
com.badlogic.gdx.input.GestureDetector$GestureListener
com.badlogic.gdx.input.GestureDetector$VelocityTracker
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$RemoteInputListener
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.maps.ImageResolver
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver
com.badlogic.gdx.maps.Map
com.badlogic.gdx.maps.MapLayer
com.badlogic.gdx.maps.MapLayers
com.badlogic.gdx.maps.MapObject
com.badlogic.gdx.maps.MapObjects
com.badlogic.gdx.maps.MapProperties
com.badlogic.gdx.maps.MapRenderer
com.badlogic.gdx.maps.objects.CircleMapObject
com.badlogic.gdx.maps.objects.EllipseMapObject
com.badlogic.gdx.maps.objects.PolygonMapObject
com.badlogic.gdx.maps.objects.PolylineMapObject
com.badlogic.gdx.maps.objects.RectangleMapObject
com.badlogic.gdx.maps.objects.TextureMapObject
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters
com.badlogic.gdx.maps.tiled.BaseTmxMapLoader
com.badlogic.gdx.maps.tiled.BaseTmxMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TideMapLoader
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TiledMap
com.badlogic.gdx.maps.tiled.TiledMapImageLayer
com.badlogic.gdx.maps.tiled.TiledMapRenderer
com.badlogic.gdx.maps.tiled.TiledMapTile
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode
com.badlogic.gdx.maps.tiled.TiledMapTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell
com.badlogic.gdx.maps.tiled.TiledMapTileSet
com.badlogic.gdx.maps.tiled.TiledMapTileSets
com.badlogic.gdx.maps.tiled.TmxMapLoader
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters
com.badlogic.gdx.maps.tiled.objects.TiledMapTileMapObject
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile
com.badlogic.gdx.math.Affine2
com.badlogic.gdx.math.BSpline
com.badlogic.gdx.math.Bezier
com.badlogic.gdx.math.Bresenham2
com.badlogic.gdx.math.Bresenham2$1
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.Circle
com.badlogic.gdx.math.ConvexHull
com.badlogic.gdx.math.CumulativeDistribution
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue
com.badlogic.gdx.math.DelaunayTriangulator
com.badlogic.gdx.math.EarClippingTriangulator
com.badlogic.gdx.math.Ellipse
com.badlogic.gdx.math.FloatCounter
com.badlogic.gdx.math.Frustum:
    84:88:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    98:102:public boolean pointInFrustum(float,float,float)
    111:114:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    125:127:public boolean sphereInFrustum(float,float,float,float)
    136:139:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    150:152:public boolean sphereInFrustumWithoutNearFar(float,float,float,float)
    160:172:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
    178:178:public boolean boundsInFrustum(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    184:196:public boolean boundsInFrustum(float,float,float,float,float,float)
com.badlogic.gdx.math.GeometryUtils
com.badlogic.gdx.math.GridPoint2
com.badlogic.gdx.math.GridPoint3
com.badlogic.gdx.math.Interpolation
com.badlogic.gdx.math.Interpolation$1
com.badlogic.gdx.math.Interpolation$10
com.badlogic.gdx.math.Interpolation$11
com.badlogic.gdx.math.Interpolation$12
com.badlogic.gdx.math.Interpolation$13
com.badlogic.gdx.math.Interpolation$14
com.badlogic.gdx.math.Interpolation$2
com.badlogic.gdx.math.Interpolation$3
com.badlogic.gdx.math.Interpolation$4
com.badlogic.gdx.math.Interpolation$5
com.badlogic.gdx.math.Interpolation$6
com.badlogic.gdx.math.Interpolation$7
com.badlogic.gdx.math.Interpolation$8
com.badlogic.gdx.math.Interpolation$9
com.badlogic.gdx.math.Interpolation$Bounce
com.badlogic.gdx.math.Interpolation$BounceIn
com.badlogic.gdx.math.Interpolation$BounceOut
com.badlogic.gdx.math.Interpolation$Elastic
com.badlogic.gdx.math.Interpolation$ElasticIn
com.badlogic.gdx.math.Interpolation$ElasticOut
com.badlogic.gdx.math.Interpolation$Exp
com.badlogic.gdx.math.Interpolation$ExpIn
com.badlogic.gdx.math.Interpolation$ExpOut
com.badlogic.gdx.math.Interpolation$Pow
com.badlogic.gdx.math.Interpolation$PowIn
com.badlogic.gdx.math.Interpolation$PowOut
com.badlogic.gdx.math.Interpolation$Swing
com.badlogic.gdx.math.Interpolation$SwingIn
com.badlogic.gdx.math.Interpolation$SwingOut
com.badlogic.gdx.math.Intersector
com.badlogic.gdx.math.Intersector$MinimumTranslationVector
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float FLOAT_ROUNDING_ERROR
    public static final float PI
    public static final float PI2
    public static final float E
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_CEIL
    private static final double BIG_ENOUGH_ROUND
    25:25:public MathUtils()
    74:74:public static float sinDeg(float)
    79:79:public static float cosDeg(float)
    87:99:public static float atan2(float,float)
    113:113:public static int random(int,int)
    118:118:public static long random(long)
    123:123:public static long random(long,long)
    128:128:public static boolean randomBoolean()
    133:133:public static boolean randomBoolean(float)
    138:138:public static float random()
    143:143:public static float random(float)
    148:148:public static float random(float,float)
    153:153:public static int randomSign()
    161:161:public static float randomTriangular()
    170:170:public static float randomTriangular(float)
    180:180:public static float randomTriangular(float,float)
    189:192:public static float randomTriangular(float,float,float)
    216:218:public static short clamp(short,short,short)
    222:224:public static int clamp(int,int,int)
    228:230:public static long clamp(long,long,long)
    234:236:public static float clamp(float,float,float)
    240:242:public static double clamp(double,double,double)
    249:249:public static float lerp(float,float,float)
    260:261:public static float lerpAngle(float,float,float)
    272:273:public static float lerpAngleDeg(float,float,float)
    287:287:public static int floor(float)
    293:293:public static int floorPositive(float)
    299:299:public static int ceil(float)
    305:305:public static int ceilPositive(float)
    316:316:public static int roundPositive(float)
    321:321:public static boolean isZero(float)
    327:327:public static boolean isZero(float,float)
    334:334:public static boolean isEqual(float,float)
    342:342:public static boolean isEqual(float,float,float)
    347:347:public static float log(float,float)
    352:352:public static float log2(float)
com.badlogic.gdx.math.MathUtils$Sin:
    51:51:private MathUtils$Sin()
com.badlogic.gdx.math.Matrix3
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    74:89:public Matrix4(com.badlogic.gdx.math.Matrix4)
    74:96:public Matrix4(float[])
    74:102:public Matrix4(com.badlogic.gdx.math.Quaternion)
    74:110:public Matrix4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
    136:136:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
    147:147:public com.badlogic.gdx.math.Matrix4 set(float,float,float,float)
    155:155:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion)
    170:194:public com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float)
    203:203:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
    222:246:public com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float,float,float,float)
    257:273:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    278:278:public com.badlogic.gdx.math.Matrix4 cpy()
    286:289:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    299:302:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    307:307:public float[] getValues()
    332:334:public com.badlogic.gdx.math.Matrix4 mulLeft(com.badlogic.gdx.math.Matrix4)
    341:357:public com.badlogic.gdx.math.Matrix4 tra()
    388:447:public com.badlogic.gdx.math.Matrix4 inv()
    452:452:public float det()
    465:465:public float det3x3()
    479:500:public com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float)
    515:538:public com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float,float,float)
    565:566:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    615:618:public com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3)
    628:631:public com.badlogic.gdx.math.Matrix4 setTranslation(float,float,float)
    640:644:public com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3)
    669:676:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    691:698:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    710:714:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
    723:727:public com.badlogic.gdx.math.Matrix4 setToRotationRad(com.badlogic.gdx.math.Vector3,float)
    738:742:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    753:757:public com.badlogic.gdx.math.Matrix4 setToRotationRad(float,float,float,float)
    765:765:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    777:777:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    786:787:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    796:797:public com.badlogic.gdx.math.Matrix4 setFromEulerAnglesRad(float,float,float)
    805:809:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    819:823:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    877:882:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    896:898:public com.badlogic.gdx.math.Matrix4 lerp(com.badlogic.gdx.math.Matrix4,float)
    907:920:public com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4,float)
    928:945:public com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[])
    955:970:public com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[],float[])
    976:992:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
    1006:1022:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Affine2)
    1037:1043:public com.badlogic.gdx.math.Matrix4 setAsAffine(com.badlogic.gdx.math.Affine2)
    1057:1063:public com.badlogic.gdx.math.Matrix4 setAsAffine(com.badlogic.gdx.math.Matrix4)
    1067:1070:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    1074:1077:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    1081:1084:public com.badlogic.gdx.math.Matrix4 scl(float)
    1088:1091:public com.badlogic.gdx.math.Vector3 getTranslation(com.badlogic.gdx.math.Vector3)
    1099:1099:public com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion,boolean)
    1106:1106:public com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion)
    1111:1111:public float getScaleXSquared()
    1116:1116:public float getScaleYSquared()
    1121:1121:public float getScaleZSquared()
    1126:1127:public float getScaleX()
    1132:1133:public float getScaleY()
    1138:1139:public float getScaleZ()
    1145:1145:public com.badlogic.gdx.math.Vector3 getScale(com.badlogic.gdx.math.Vector3)
    1150:1153:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    1416:1416:public com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
    1426:1444:public com.badlogic.gdx.math.Matrix4 translate(float,float,float)
    1454:1456:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1466:1468:public com.badlogic.gdx.math.Matrix4 rotateRad(com.badlogic.gdx.math.Vector3,float)
    1479:1481:public com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float)
    1492:1494:public com.badlogic.gdx.math.Matrix4 rotateRad(float,float,float,float)
    1503:1505:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion)
    1513:1513:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    1523:1541:public com.badlogic.gdx.math.Matrix4 scale(float,float,float)
    1547:1559:public void extract4x3Matrix(float[])
    1563:1565:public boolean hasRotationOrScaling()
com.badlogic.gdx.math.Path
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    35:61:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    35:71:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    91:93:public void set(float,float,float,float)
    100:100:public float distance(com.badlogic.gdx.math.Vector3)
    109:116:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    127:134:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    143:144:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    149:149:public com.badlogic.gdx.math.Vector3 getNormal()
    154:154:public float getD()
    162:164:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    167:169:public void set(float,float,float,float,float,float)
    175:177:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Polygon
com.badlogic.gdx.math.Polyline
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    54:56:public Quaternion(com.badlogic.gdx.math.Quaternion)
    62:64:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    84:84:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
    93:93:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float)
    98:98:public com.badlogic.gdx.math.Quaternion cpy()
    103:103:public static final float len(float,float,float,float)
    108:108:public float len()
    122:122:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    132:150:public com.badlogic.gdx.math.Quaternion setEulerAnglesRad(float,float,float)
    156:157:public int getGimbalPole()
    163:165:public float getRollRad()
    171:171:public float getRoll()
    177:178:public float getPitchRad()
    184:184:public float getPitch()
    190:190:public float getYawRad()
    196:196:public float getYaw()
    200:200:public static final float len2(float,float,float,float)
    205:205:public float len2()
    211:219:public com.badlogic.gdx.math.Quaternion nor()
    226:229:public com.badlogic.gdx.math.Quaternion conjugate()
    237:244:public com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3)
    252:260:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    271:279:public com.badlogic.gdx.math.Quaternion mul(float,float,float,float)
    287:295:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    306:314:public com.badlogic.gdx.math.Quaternion mulLeft(float,float,float,float)
    319:323:public com.badlogic.gdx.math.Quaternion add(com.badlogic.gdx.math.Quaternion)
    328:332:public com.badlogic.gdx.math.Quaternion add(float,float,float,float)
    341:367:public void toMatrix(float[])
    377:377:public boolean isIdentity()
    382:383:public boolean isIdentity(float)
    393:393:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    402:402:public com.badlogic.gdx.math.Quaternion setFromAxisRad(com.badlogic.gdx.math.Vector3,float)
    412:412:public com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float)
    422:428:public com.badlogic.gdx.math.Quaternion setFromAxisRad(float,float,float,float)
    433:433:public com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4)
    440:440:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    445:445:public com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3)
    452:452:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix3)
    474:474:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    498:547:public com.badlogic.gdx.math.Quaternion setFromAxes(boolean,float,float,float,float,float,float,float,float,float)
    555:557:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    569:571:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    580:610:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    620:625:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[])
    637:641:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[],float[])
    651:674:public com.badlogic.gdx.math.Quaternion exp(float)
    718:718:public static final float dot(float,float,float,float,float,float,float,float)
    725:725:public float dot(com.badlogic.gdx.math.Quaternion)
    735:735:public float dot(float,float,float,float)
    742:746:public com.badlogic.gdx.math.Quaternion mul(float)
    760:760:public float getAxisAngle(com.badlogic.gdx.math.Vector3)
    774:788:public float getAxisAngleRad(com.badlogic.gdx.math.Vector3)
    796:796:public float getAngleRad()
    803:803:public float getAngle()
    819:823:public void getSwingTwist(float,float,float,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
    835:836:public void getSwingTwist(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
    844:847:public float getAngleAroundRad(float,float,float)
    854:854:public float getAngleAroundRad(com.badlogic.gdx.math.Vector3)
    863:863:public float getAngleAround(float,float,float)
    870:870:public float getAngleAround(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.RandomXS128:
    private static final double NORM_DOUBLE
    private static final double NORM_FLOAT
    54:56:public RandomXS128(long)
    61:63:public RandomXS128(long,long)
    184:184:public long getState(int)
com.badlogic.gdx.math.Rectangle:
    private static final long serialVersionUID
    54:59:public Rectangle(com.badlogic.gdx.math.Rectangle)
    77:77:public float getX()
    84:86:public com.badlogic.gdx.math.Rectangle setX(float)
    91:91:public float getY()
    98:100:public com.badlogic.gdx.math.Rectangle setY(float)
    112:114:public com.badlogic.gdx.math.Rectangle setWidth(float)
    126:128:public com.badlogic.gdx.math.Rectangle setHeight(float)
    134:134:public com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2)
    141:144:public com.badlogic.gdx.math.Rectangle setPosition(com.badlogic.gdx.math.Vector2)
    152:155:public com.badlogic.gdx.math.Rectangle setPosition(float,float)
    163:166:public com.badlogic.gdx.math.Rectangle setSize(float,float)
    173:176:public com.badlogic.gdx.math.Rectangle setSize(float)
    182:182:public com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2)
    189:189:public boolean contains(float,float)
    195:195:public boolean contains(com.badlogic.gdx.math.Vector2)
    201:201:public boolean contains(com.badlogic.gdx.math.Circle)
    208:214:public boolean contains(com.badlogic.gdx.math.Rectangle)
    221:221:public boolean overlaps(com.badlogic.gdx.math.Rectangle)
    228:233:public com.badlogic.gdx.math.Rectangle set(com.badlogic.gdx.math.Rectangle)
    240:250:public com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Rectangle)
    258:268:public com.badlogic.gdx.math.Rectangle merge(float,float)
    275:275:public com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2)
    282:297:public com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2[])
    303:303:public float getAspectRatio()
    310:312:public com.badlogic.gdx.math.Vector2 getCenter(com.badlogic.gdx.math.Vector2)
    320:321:public com.badlogic.gdx.math.Rectangle setCenter(float,float)
    328:329:public com.badlogic.gdx.math.Rectangle setCenter(com.badlogic.gdx.math.Vector2)
    338:349:public com.badlogic.gdx.math.Rectangle fitOutside(com.badlogic.gdx.math.Rectangle)
    358:369:public com.badlogic.gdx.math.Rectangle fitInside(com.badlogic.gdx.math.Rectangle)
    383:397:public com.badlogic.gdx.math.Rectangle fromString(java.lang.String)
    401:401:public float area()
    405:405:public float perimeter()
com.badlogic.gdx.math.Shape2D
com.badlogic.gdx.math.Vector
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    52:54:public Vector2(com.badlogic.gdx.math.Vector2)
    58:58:public com.badlogic.gdx.math.Vector2 cpy()
    62:62:public static float len(float,float)
    71:71:public static float len2(float,float)
    76:76:public float len2()
    81:83:public com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2)
    98:100:public com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
    108:110:public com.badlogic.gdx.math.Vector2 sub(float,float)
    125:127:public com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2)
    135:137:public com.badlogic.gdx.math.Vector2 add(float,float)
    141:141:public static float dot(float,float,float,float)
    146:146:public float dot(com.badlogic.gdx.math.Vector2)
    150:150:public float dot(float,float)
    155:157:public com.badlogic.gdx.math.Vector2 scl(float)
    163:165:public com.badlogic.gdx.math.Vector2 scl(float,float)
    170:172:public com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2)
    177:179:public com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,float)
    184:186:public com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    190:192:public static float dst(float,float,float,float)
    197:199:public float dst(com.badlogic.gdx.math.Vector2)
    206:208:public float dst(float,float)
    212:214:public static float dst2(float,float,float,float)
    219:221:public float dst2(com.badlogic.gdx.math.Vector2)
    228:230:public float dst2(float,float)
    235:235:public com.badlogic.gdx.math.Vector2 limit(float)
    240:244:public com.badlogic.gdx.math.Vector2 limit2(float)
    249:255:public com.badlogic.gdx.math.Vector2 clamp(float,float)
    260:260:public com.badlogic.gdx.math.Vector2 setLength(float)
    265:266:public com.badlogic.gdx.math.Vector2 setLength2(float)
    280:290:public com.badlogic.gdx.math.Vector2 fromString(java.lang.String)
    297:301:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    308:308:public float crs(com.badlogic.gdx.math.Vector2)
    316:316:public float crs(float,float)
    322:324:public float angle()
    330:330:public float angle(com.badlogic.gdx.math.Vector2)
    336:336:public float angleRad()
    342:342:public float angleRad(com.badlogic.gdx.math.Vector2)
    348:348:public com.badlogic.gdx.math.Vector2 setAngle(float)
    354:357:public com.badlogic.gdx.math.Vector2 setAngleRad(float)
    363:363:public com.badlogic.gdx.math.Vector2 rotate(float)
    369:378:public com.badlogic.gdx.math.Vector2 rotateRad(float)
    383:391:public com.badlogic.gdx.math.Vector2 rotate90(int)
    396:399:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    404:404:public com.badlogic.gdx.math.Vector2 interpolate(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Interpolation)
    409:410:public com.badlogic.gdx.math.Vector2 setToRandomDirection()
    435:438:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
    444:446:public boolean epsilonEquals(float,float,float)
    451:451:public boolean isUnit()
    456:456:public boolean isUnit(float)
    461:461:public boolean isZero()
    466:466:public boolean isZero(float)
    471:471:public boolean isOnLine(com.badlogic.gdx.math.Vector2)
    476:476:public boolean isOnLine(com.badlogic.gdx.math.Vector2,float)
    481:481:public boolean isCollinear(com.badlogic.gdx.math.Vector2,float)
    486:486:public boolean isCollinear(com.badlogic.gdx.math.Vector2)
    491:491:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2,float)
    496:496:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2)
    501:501:public boolean isPerpendicular(com.badlogic.gdx.math.Vector2)
    506:506:public boolean isPerpendicular(com.badlogic.gdx.math.Vector2,float)
    511:511:public boolean hasSameDirection(com.badlogic.gdx.math.Vector2)
    516:516:public boolean hasOppositeDirection(com.badlogic.gdx.math.Vector2)
    521:523:public com.badlogic.gdx.math.Vector2 setZero()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setZero()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean epsilonEquals(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean hasOppositeDirection(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean hasSameDirection(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setToRandomDirection()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    26:26:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setLength2(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setLength(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector limit2(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    57:59:public Vector3(com.badlogic.gdx.math.Vector3)
    64:66:public Vector3(float[])
    72:74:public Vector3(com.badlogic.gdx.math.Vector2,float)
    99:99:public com.badlogic.gdx.math.Vector3 set(float[])
    108:108:public com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector2,float)
    116:122:public com.badlogic.gdx.math.Vector3 setFromSpherical(float,float)
    127:133:public com.badlogic.gdx.math.Vector3 setToRandomDirection()
    138:138:public com.badlogic.gdx.math.Vector3 cpy()
    160:160:public com.badlogic.gdx.math.Vector3 add(float)
    183:183:public com.badlogic.gdx.math.Vector3 sub(float)
    193:193:public com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3)
    202:202:public com.badlogic.gdx.math.Vector3 scl(float,float,float)
    207:210:public com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,float)
    215:218:public com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    223:223:public static float len(float,float,float)
    228:228:public float len()
    233:233:public static float len2(float,float,float)
    244:244:public boolean idt(com.badlogic.gdx.math.Vector3)
    249:252:public static float dst(float,float,float,float,float,float)
    257:260:public float dst(com.badlogic.gdx.math.Vector3)
    265:268:public float dst(float,float,float)
    273:276:public static float dst2(float,float,float,float,float,float)
    281:284:public float dst2(com.badlogic.gdx.math.Vector3)
    293:296:public float dst2(float,float,float)
    308:308:public static float dot(float,float,float,float,float,float)
    322:322:public float dot(float,float,float)
    346:346:public com.badlogic.gdx.math.Vector3 mul4x3(float[])
    354:355:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4)
    364:365:public com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix4)
    374:375:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix3)
    383:384:public com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix3)
    391:391:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion)
    400:402:public com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4)
    412:413:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    422:423:public com.badlogic.gdx.math.Vector3 unrotate(com.badlogic.gdx.math.Matrix4)
    433:437:public com.badlogic.gdx.math.Vector3 untransform(com.badlogic.gdx.math.Matrix4)
    449:449:public com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
    460:460:public com.badlogic.gdx.math.Vector3 rotateRad(float,float,float,float)
    469:470:public com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
    479:480:public com.badlogic.gdx.math.Vector3 rotateRad(com.badlogic.gdx.math.Vector3,float)
    485:485:public boolean isUnit()
    490:490:public boolean isUnit(float)
    495:495:public boolean isZero()
    500:500:public boolean isZero(float)
    505:505:public boolean isOnLine(com.badlogic.gdx.math.Vector3,float)
    510:510:public boolean isOnLine(com.badlogic.gdx.math.Vector3)
    515:515:public boolean isCollinear(com.badlogic.gdx.math.Vector3,float)
    520:520:public boolean isCollinear(com.badlogic.gdx.math.Vector3)
    525:525:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3,float)
    530:530:public boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3)
    535:535:public boolean isPerpendicular(com.badlogic.gdx.math.Vector3)
    540:540:public boolean isPerpendicular(com.badlogic.gdx.math.Vector3,float)
    545:545:public boolean hasSameDirection(com.badlogic.gdx.math.Vector3)
    550:550:public boolean hasOppositeDirection(com.badlogic.gdx.math.Vector3)
    555:558:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    563:563:public com.badlogic.gdx.math.Vector3 interpolate(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Interpolation)
    573:589:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    603:615:public com.badlogic.gdx.math.Vector3 fromString(java.lang.String)
    620:620:public com.badlogic.gdx.math.Vector3 limit(float)
    625:629:public com.badlogic.gdx.math.Vector3 limit2(float)
    634:634:public com.badlogic.gdx.math.Vector3 setLength(float)
    639:640:public com.badlogic.gdx.math.Vector3 setLength2(float)
    645:651:public com.badlogic.gdx.math.Vector3 clamp(float,float)
    678:682:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    688:691:public boolean epsilonEquals(float,float,float,float)
    696:699:public com.badlogic.gdx.math.Vector3 setZero()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setZero()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean epsilonEquals(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean hasOppositeDirection(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean hasSameDirection(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean isPerpendicular(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isCollinear(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic boolean isOnLine(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setToRandomDirection()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    26:26:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    26:26:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setLength2(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector setLength(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector limit2(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    26:26:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.WindowedMean:
    41:41:public boolean hasEnoughData()
    68:79:public float getMean()
    84:84:public float getOldest()
    89:89:public float getLatest()
    94:102:public float standardDeviation()
    106:106:public int getWindowSize()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    45:45:public com.badlogic.gdx.math.collision.Ray cpy()
    53:53:public com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float)
    63:67:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    81:83:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    96:98:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    106:108:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.net.HttpParametersUtils
com.badlogic.gdx.net.HttpRequestBuilder
com.badlogic.gdx.net.HttpRequestHeader
com.badlogic.gdx.net.HttpResponseHeader
com.badlogic.gdx.net.HttpStatus
com.badlogic.gdx.net.NetJavaImpl:
    133:230:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    233:239:public void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest)
    242:244:synchronized void removeFromConnectionsAndListeners(com.badlogic.gdx.Net$HttpRequest)
    248:250:synchronized void putIntoConnectionsAndListeners(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener,java.net.HttpURLConnection)
    253:254:synchronized com.badlogic.gdx.Net$HttpResponseListener getFromListeners(com.badlogic.gdx.Net$HttpRequest)
com.badlogic.gdx.net.NetJavaImpl$1
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse
com.badlogic.gdx.net.NetJavaServerSocketImpl
com.badlogic.gdx.net.NetJavaSocketImpl
com.badlogic.gdx.net.ServerSocket
com.badlogic.gdx.net.ServerSocketHints
com.badlogic.gdx.net.Socket
com.badlogic.gdx.net.SocketHints
com.badlogic.gdx.scenes.scene2d.Action
com.badlogic.gdx.scenes.scene2d.Actor
com.badlogic.gdx.scenes.scene2d.Event
com.badlogic.gdx.scenes.scene2d.EventListener
com.badlogic.gdx.scenes.scene2d.Group
com.badlogic.gdx.scenes.scene2d.InputEvent
com.badlogic.gdx.scenes.scene2d.InputEvent$Type
com.badlogic.gdx.scenes.scene2d.InputListener
com.badlogic.gdx.scenes.scene2d.InputListener$1
com.badlogic.gdx.scenes.scene2d.Stage
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus
com.badlogic.gdx.scenes.scene2d.Touchable
com.badlogic.gdx.scenes.scene2d.actions.Actions
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction
com.badlogic.gdx.scenes.scene2d.actions.AfterAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction
com.badlogic.gdx.scenes.scene2d.actions.ColorAction
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction
com.badlogic.gdx.scenes.scene2d.actions.DelayAction
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction
com.badlogic.gdx.scenes.scene2d.actions.EventAction
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.ui.Button
com.badlogic.gdx.scenes.scene2d.ui.Button$1
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup
com.badlogic.gdx.scenes.scene2d.ui.Cell
com.badlogic.gdx.scenes.scene2d.ui.CheckBox
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.Container
com.badlogic.gdx.scenes.scene2d.ui.Dialog
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup
com.badlogic.gdx.scenes.scene2d.ui.Image
com.badlogic.gdx.scenes.scene2d.ui.ImageButton
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.Label
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
com.badlogic.gdx.scenes.scene2d.ui.List
com.badlogic.gdx.scenes.scene2d.ui.List$1
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$2
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$3
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$4
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.Skin
com.badlogic.gdx.scenes.scene2d.ui.Skin$1
com.badlogic.gdx.scenes.scene2d.ui.Skin$2
com.badlogic.gdx.scenes.scene2d.ui.Skin$3
com.badlogic.gdx.scenes.scene2d.ui.Skin$4
com.badlogic.gdx.scenes.scene2d.ui.Skin$5
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable
com.badlogic.gdx.scenes.scene2d.ui.Slider
com.badlogic.gdx.scenes.scene2d.ui.Slider$1
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle
com.badlogic.gdx.scenes.scene2d.ui.SplitPane
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.Stack
com.badlogic.gdx.scenes.scene2d.ui.Table
com.badlogic.gdx.scenes.scene2d.ui.Table$1
com.badlogic.gdx.scenes.scene2d.ui.Table$2
com.badlogic.gdx.scenes.scene2d.ui.Table$3
com.badlogic.gdx.scenes.scene2d.ui.Table$4
com.badlogic.gdx.scenes.scene2d.ui.Table$5
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug
com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect
com.badlogic.gdx.scenes.scene2d.ui.TextArea
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener
com.badlogic.gdx.scenes.scene2d.ui.TextButton
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.TextField
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle
com.badlogic.gdx.scenes.scene2d.ui.TextTooltip
com.badlogic.gdx.scenes.scene2d.ui.TextTooltip$1
com.badlogic.gdx.scenes.scene2d.ui.TextTooltip$TextTooltipStyle
com.badlogic.gdx.scenes.scene2d.ui.Tooltip
com.badlogic.gdx.scenes.scene2d.ui.Tooltip$1
com.badlogic.gdx.scenes.scene2d.ui.TooltipManager
com.badlogic.gdx.scenes.scene2d.ui.TooltipManager$1
com.badlogic.gdx.scenes.scene2d.ui.TooltipManager$2
com.badlogic.gdx.scenes.scene2d.ui.Touchpad
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle
com.badlogic.gdx.scenes.scene2d.ui.Tree
com.badlogic.gdx.scenes.scene2d.ui.Tree$1
com.badlogic.gdx.scenes.scene2d.ui.Tree$2
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle
com.badlogic.gdx.scenes.scene2d.ui.Value
com.badlogic.gdx.scenes.scene2d.ui.Value$1
com.badlogic.gdx.scenes.scene2d.ui.Value$10
com.badlogic.gdx.scenes.scene2d.ui.Value$2
com.badlogic.gdx.scenes.scene2d.ui.Value$3
com.badlogic.gdx.scenes.scene2d.ui.Value$4
com.badlogic.gdx.scenes.scene2d.ui.Value$5
com.badlogic.gdx.scenes.scene2d.ui.Value$6
com.badlogic.gdx.scenes.scene2d.ui.Value$7
com.badlogic.gdx.scenes.scene2d.ui.Value$8
com.badlogic.gdx.scenes.scene2d.ui.Value$9
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup
com.badlogic.gdx.scenes.scene2d.ui.Widget
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup
com.badlogic.gdx.scenes.scene2d.ui.Window
com.badlogic.gdx.scenes.scene2d.ui.Window$1
com.badlogic.gdx.scenes.scene2d.ui.Window$2
com.badlogic.gdx.scenes.scene2d.ui.Window$3
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent
com.badlogic.gdx.scenes.scene2d.utils.ClickListener
com.badlogic.gdx.scenes.scene2d.utils.Cullable
com.badlogic.gdx.scenes.scene2d.utils.Disableable
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2
com.badlogic.gdx.scenes.scene2d.utils.Drawable
com.badlogic.gdx.scenes.scene2d.utils.FocusListener
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Layout
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack
com.badlogic.gdx.scenes.scene2d.utils.Selection
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable
com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable
com.badlogic.gdx.scenes.scene2d.utils.UIUtils
com.badlogic.gdx.utils.Align
com.badlogic.gdx.utils.Array:
    private com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable
    115:116:public varargs void addAll(java.lang.Object[])
    132:134:public void set(int,java.lang.Object)
    137:146:public void insert(int,java.lang.Object)
    149:155:public void swap(int,int)
    162:171:public boolean contains(java.lang.Object,boolean)
    179:187:public int indexOf(java.lang.Object,boolean)
    196:204:public int lastIndexOf(java.lang.Object,boolean)
    265:291:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    326:327:public java.lang.Object[] shrink()
    342:345:public java.lang.Object[] setSize(int)
    360:361:public void sort()
    365:366:public void sort(java.util.Comparator)
    376:379:public java.lang.Object selectRanked(java.util.Comparator,int)
    388:391:public int selectRankedIndex(java.util.Comparator,int)
    395:402:public void reverse()
    405:412:public void shuffle()
    425:429:public java.lang.Iterable select(com.badlogic.gdx.utils.Predicate)
    443:444:public java.lang.Object random()
    450:450:public java.lang.Object[] toArray()
    454:456:public java.lang.Object[] toArray(java.lang.Class)
    504:512:public java.lang.String toString(java.lang.String)
    517:517:public static com.badlogic.gdx.utils.Array of(java.lang.Class)
    522:522:public static com.badlogic.gdx.utils.Array of(boolean,int,java.lang.Class)
com.badlogic.gdx.utils.Array$ArrayIterator:
    539:540:public Array$ArrayIterator(com.badlogic.gdx.utils.Array)
    571:572:public void reset()
com.badlogic.gdx.utils.ArrayMap
com.badlogic.gdx.utils.ArrayMap$Entries
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.Base64Coder
com.badlogic.gdx.utils.Base64Coder$CharMap
com.badlogic.gdx.utils.BaseJsonReader
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.Bits
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BufferUtils:
    35:35:public BufferUtils()
    82:84:public static void copy(short[],int,java.nio.Buffer,int)
    95:96:public static void copy(char[],int,int,java.nio.Buffer)
    107:108:public static void copy(int[],int,int,java.nio.Buffer)
    119:120:public static void copy(long[],int,int,java.nio.Buffer)
    131:132:public static void copy(float[],int,int,java.nio.Buffer)
    143:144:public static void copy(double[],int,int,java.nio.Buffer)
    156:158:public static void copy(char[],int,java.nio.Buffer,int)
    170:172:public static void copy(int[],int,java.nio.Buffer,int)
    184:186:public static void copy(long[],int,java.nio.Buffer,int)
    198:200:public static void copy(float[],int,java.nio.Buffer,int)
    212:214:public static void copy(double[],int,java.nio.Buffer,int)
    239:240:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4)
    250:251:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4)
    262:275:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4,int)
    286:299:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4,int)
    309:310:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3)
    320:321:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3)
    332:342:public static void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3,int)
    353:363:public static void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3,int)
    366:366:public static long findFloats(java.nio.Buffer,int,java.nio.Buffer,int)
    370:370:public static long findFloats(float[],int,java.nio.Buffer,int)
    374:374:public static long findFloats(java.nio.Buffer,int,float[],int)
    378:378:public static long findFloats(float[],int,float[],int)
    382:382:public static long findFloats(java.nio.Buffer,int,java.nio.Buffer,int,float)
    386:386:public static long findFloats(float[],int,java.nio.Buffer,int,float)
    390:390:public static long findFloats(java.nio.Buffer,int,float[],int,float)
    394:394:public static long findFloats(float[],int,float[],int,float)
    461:463:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    473:475:public static java.nio.ShortBuffer newShortBuffer(int)
    479:481:public static java.nio.CharBuffer newCharBuffer(int)
    491:493:public static java.nio.LongBuffer newLongBuffer(int)
    532:532:public static long getUnsafeBufferAddress(java.nio.Buffer)
    543:547:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    554:554:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void transformV4M4Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV4M4Jni(float[],int,int,float[],int)
    private static native void transformV3M4Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV3M4Jni(float[],int,int,float[],int)
    private static native void transformV2M4Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV2M4Jni(float[],int,int,float[],int)
    private static native void transformV3M3Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV3M3Jni(float[],int,int,float[],int)
    private static native void transformV2M3Jni(java.nio.Buffer,int,int,float[],int)
    private static native void transformV2M3Jni(float[],int,int,float[],int)
    private static native long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int)
    private static native long find(float[],int,int,java.nio.Buffer,int,int)
    private static native long find(java.nio.Buffer,int,int,float[],int,int)
    private static native long find(float[],int,int,float[],int,int)
    private static native long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int,float)
    private static native long find(float[],int,int,java.nio.Buffer,int,int,float)
    private static native long find(java.nio.Buffer,int,int,float[],int,int,float)
    private static native long find(float[],int,int,float[],int,int,float)
com.badlogic.gdx.utils.ByteArray
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.Clipboard
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.DataBuffer
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DelayedRemovalArray
com.badlogic.gdx.utils.FloatArray:
    38:39:public FloatArray(int)
    52:57:public FloatArray(com.badlogic.gdx.utils.FloatArray)
    62:63:public FloatArray(float[])
    70:73:public FloatArray(boolean,float[],int,int)
    92:93:public varargs void addAll(float[])
    114:116:public void incr(int,float)
    119:121:public void mul(int,float)
    124:133:public void insert(int,float)
    136:142:public void swap(int,int)
    145:149:public boolean contains(float)
    153:156:public int indexOf(float)
    160:163:public int lastIndexOf(char)
    167:174:public boolean removeValue(float)
    179:187:public float removeIndex(int)
    209:222:public boolean removeAll(com.badlogic.gdx.utils.FloatArray)
    227:227:public float pop()
    237:238:public float first()
    249:250:public float[] shrink()
    265:267:public float[] setSize(int)
    279:280:public void sort()
    283:290:public void reverse()
    293:300:public void shuffle()
    310:311:public float random()
    315:317:public float[] toArray()
    345:356:public boolean equals(java.lang.Object,float)
    374:382:public java.lang.String toString(java.lang.String)
    387:387:public static varargs com.badlogic.gdx.utils.FloatArray with(float[])
com.badlogic.gdx.utils.FlushablePool
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxNativesLoader:
    21:21:public GdxNativesLoader()
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.I18NBundle
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IntArray:
    38:39:public IntArray(int)
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    92:93:public varargs void addAll(int[])
    96:101:public void addAll(int[],int,int)
    109:111:public void set(int,int)
    114:116:public void incr(int,int)
    119:121:public void mul(int,int)
    124:133:public void insert(int,int)
    136:142:public void swap(int,int)
    145:149:public boolean contains(int)
    153:156:public int indexOf(int)
    160:163:public int lastIndexOf(int)
    167:174:public boolean removeValue(int)
    179:187:public int removeIndex(int)
    192:204:public void removeRange(int,int)
    209:222:public boolean removeAll(com.badlogic.gdx.utils.IntArray)
    227:227:public int pop()
    232:232:public int peek()
    237:238:public int first()
    249:250:public int[] shrink()
    265:267:public int[] setSize(int)
    279:280:public void sort()
    283:290:public void reverse()
    293:300:public void shuffle()
    305:306:public void truncate(int)
    310:311:public int random()
    315:317:public int[] toArray()
    359:367:public java.lang.String toString(java.lang.String)
    372:372:public static varargs com.badlogic.gdx.utils.IntArray with(int[])
com.badlogic.gdx.utils.IntFloatMap
com.badlogic.gdx.utils.IntFloatMap$Entries
com.badlogic.gdx.utils.IntFloatMap$Entry
com.badlogic.gdx.utils.IntFloatMap$Keys
com.badlogic.gdx.utils.IntFloatMap$MapIterator
com.badlogic.gdx.utils.IntFloatMap$Values
com.badlogic.gdx.utils.IntIntMap
com.badlogic.gdx.utils.IntIntMap$Entries
com.badlogic.gdx.utils.IntIntMap$Entry
com.badlogic.gdx.utils.IntIntMap$Keys
com.badlogic.gdx.utils.IntIntMap$MapIterator
com.badlogic.gdx.utils.IntIntMap$Values
com.badlogic.gdx.utils.IntMap
com.badlogic.gdx.utils.IntMap$Entries
com.badlogic.gdx.utils.IntMap$Entry
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$MapIterator
com.badlogic.gdx.utils.IntMap$Values
com.badlogic.gdx.utils.IntSet
com.badlogic.gdx.utils.IntSet$IntSetIterator
com.badlogic.gdx.utils.Json
com.badlogic.gdx.utils.Json$FieldMetadata
com.badlogic.gdx.utils.Json$ReadOnlySerializer
com.badlogic.gdx.utils.Json$Serializable
com.badlogic.gdx.utils.Json$Serializer
com.badlogic.gdx.utils.JsonReader
com.badlogic.gdx.utils.JsonValue
com.badlogic.gdx.utils.JsonValue$1
com.badlogic.gdx.utils.JsonValue$JsonIterator
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings
com.badlogic.gdx.utils.JsonValue$ValueType
com.badlogic.gdx.utils.JsonWriter
com.badlogic.gdx.utils.JsonWriter$1
com.badlogic.gdx.utils.JsonWriter$JsonObject
com.badlogic.gdx.utils.JsonWriter$OutputType
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    39:42:public Logger(java.lang.String,int)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.LongMap$Keys keys1
    private com.badlogic.gdx.utils.LongMap$Keys keys2
    62:63:public LongMap(int)
    89:96:public LongMap(com.badlogic.gdx.utils.LongMap)
    172:174:public void putAll(com.badlogic.gdx.utils.LongMap)
    316:328:public java.lang.Object get(long,java.lang.Object)
    406:411:public void shrink(int)
    415:423:public void clear(int)
    426:437:public void clear()
    442:457:public boolean containsValue(java.lang.Object,boolean)
    485:500:public long findKey(java.lang.Object,boolean,long)
    506:508:public void ensureCapacity(int)
    673:686:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
com.badlogic.gdx.utils.LongMap$Values:
    819:822:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.NumberUtils:
    19:19:public NumberUtils()
    29:29:public static int floatToIntColor(float)
    39:39:public static float intBitsToFloat(int)
    43:43:public static long doubleToLongBits(double)
    47:47:public static double longBitsToDouble(long)
com.badlogic.gdx.utils.ObjectFloatMap
com.badlogic.gdx.utils.ObjectFloatMap$Entries
com.badlogic.gdx.utils.ObjectFloatMap$Entry
com.badlogic.gdx.utils.ObjectFloatMap$Keys
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator
com.badlogic.gdx.utils.ObjectFloatMap$Values
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Values values1
    private com.badlogic.gdx.utils.ObjectIntMap$Values values2
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys1
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys2
    59:60:public ObjectIntMap(int)
    86:91:public ObjectIntMap(com.badlogic.gdx.utils.ObjectIntMap)
    154:156:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    301:312:public int getAndIncrement(java.lang.Object,int,int)
    316:324:private int getAndIncrementStash(java.lang.Object,int,int)
    328:353:public int remove(java.lang.Object,int)
    357:366:int removeStash(java.lang.Object,int)
    382:387:public void shrink(int)
    391:397:public void clear(int)
    411:415:public boolean containsValue(int)
    442:446:public java.lang.Object findKey(int)
    452:454:public void ensureCapacity(int)
    581:594:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    600:613:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectMap$Values values1
    private com.badlogic.gdx.utils.ObjectMap$Values values2
    59:60:public ObjectMap(int)
    86:91:public ObjectMap(com.badlogic.gdx.utils.ObjectMap)
    164:167:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    310:319:public java.lang.Object get(java.lang.Object,java.lang.Object)
    323:326:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    389:394:public void shrink(int)
    398:404:public void clear(int)
    423:435:public boolean containsValue(java.lang.Object,boolean)
    463:475:public java.lang.Object findKey(java.lang.Object,boolean)
    481:483:public void ensureCapacity(int)
    566:566:public java.lang.String toString(java.lang.String)
    626:639:public com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.ObjectMap$Values
com.badlogic.gdx.utils.ObjectSet:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    56:57:public ObjectSet(int)
    82:86:public ObjectSet(com.badlogic.gdx.utils.ObjectSet)
    136:137:public void addAll(com.badlogic.gdx.utils.Array)
    140:143:public void addAll(com.badlogic.gdx.utils.Array,int,int)
    146:147:public varargs void addAll(java.lang.Object[])
    150:153:public void addAll(java.lang.Object[],int,int)
    156:159:public void addAll(com.badlogic.gdx.utils.ObjectSet)
    266:288:public boolean remove(java.lang.Object)
    292:300:boolean removeStash(java.lang.Object)
    313:318:public void shrink(int)
    322:328:public void clear(int)
    360:363:public java.lang.Object first()
    369:371:public void ensureCapacity(int)
    468:470:public static varargs com.badlogic.gdx.utils.ObjectSet with(java.lang.Object[])
com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator:
    535:537:public com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array)
    542:542:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.OrderedMap:
    private com.badlogic.gdx.utils.ObjectMap$Values values1
    private com.badlogic.gdx.utils.ObjectMap$Values values2
    40:42:public OrderedMap(int)
    45:47:public OrderedMap(int,float)
    50:52:public OrderedMap(com.badlogic.gdx.utils.OrderedMap)
    65:67:public void clear(int)
    75:75:public com.badlogic.gdx.utils.Array orderedKeys()
    104:117:public com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.OrderedMap$OrderedMapValues
com.badlogic.gdx.utils.OrderedSet
com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.PerformanceCounter
com.badlogic.gdx.utils.PerformanceCounters
com.badlogic.gdx.utils.Pool:
    37:38:public Pool(int)
    88:89:public void clear()
    93:93:public int getFree()
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.Pools:
    43:44:public static void set(java.lang.Class,com.badlogic.gdx.utils.Pool)
    48:48:public static java.lang.Object obtain(java.lang.Class)
    53:57:public static void free(java.lang.Object)
    62:63:public static void freeAll(com.badlogic.gdx.utils.Array)
    82:83:private Pools()
com.badlogic.gdx.utils.Predicate
com.badlogic.gdx.utils.Predicate$PredicateIterable
com.badlogic.gdx.utils.Predicate$PredicateIterator
com.badlogic.gdx.utils.PropertiesUtils
com.badlogic.gdx.utils.Queue
com.badlogic.gdx.utils.Queue$QueueIterable
com.badlogic.gdx.utils.Queue$QueueIterator
com.badlogic.gdx.utils.QuickSelect
com.badlogic.gdx.utils.ReflectionPool:
    30:31:public ReflectionPool(java.lang.Class)
    34:35:public ReflectionPool(java.lang.Class,int)
com.badlogic.gdx.utils.Scaling
com.badlogic.gdx.utils.Scaling$1
com.badlogic.gdx.utils.ScreenUtils
com.badlogic.gdx.utils.Select
com.badlogic.gdx.utils.SerializationException
com.badlogic.gdx.utils.SharedLibraryLoader:
    73:75:public SharedLibraryLoader(java.lang.String)
    149:163:public java.io.File extractFile(java.lang.String,java.lang.String)
    172:173:public void extractFileTo(java.lang.String,java.io.File)
    179:204:private java.io.File getExtractedFile(java.lang.String,java.lang.String)
    209:227:private boolean canWrite(java.io.File)
    233:242:private boolean canExecute(java.io.File)
com.badlogic.gdx.utils.ShortArray
com.badlogic.gdx.utils.SnapshotArray:
    49:50:public SnapshotArray(com.badlogic.gdx.utils.Array)
    53:54:public SnapshotArray(boolean,int,java.lang.Class)
    57:58:public SnapshotArray(boolean,int)
    61:62:public SnapshotArray(boolean,java.lang.Object[],int,int)
    69:70:public SnapshotArray(int)
    73:74:public SnapshotArray(java.lang.Object[])
    109:111:public void set(int,java.lang.Object)
    114:116:public void insert(int,java.lang.Object)
    119:121:public void swap(int,int)
    139:140:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    154:156:public void sort()
    159:161:public void sort(java.util.Comparator)
    164:166:public void reverse()
    169:171:public void shuffle()
    179:180:public java.lang.Object[] setSize(int)
    185:185:public static varargs com.badlogic.gdx.utils.SnapshotArray with(java.lang.Object[])
com.badlogic.gdx.utils.Sort
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.StreamUtils:
    public static final int DEFAULT_BUFFER_SIZE
    29:29:public StreamUtils()
    42:43:public static void copyStream(java.io.InputStream,java.io.OutputStream,int)
    63:64:public static void copyStream(java.io.InputStream,java.nio.ByteBuffer,int)
    84:84:public static byte[] copyStreamToByteArray(java.io.InputStream)
    98:98:public static java.lang.String copyStreamToString(java.io.InputStream)
    103:103:public static java.lang.String copyStreamToString(java.io.InputStream,int)
    110:117:public static java.lang.String copyStreamToString(java.io.InputStream,int,java.lang.String)
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream:
    143:143:public byte[] getBuffer()
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    55:55:final char[] getValue()
    83:84:public StringBuilder(java.lang.CharSequence)
    86:90:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    97:101:public StringBuilder(java.lang.String)
    122:128:final void append0(char[])
    185:185:public int capacity()
    201:215:final void delete0(int,int)
    219:227:final void deleteCharAt0(int)
    236:240:public void ensureCapacity(int)
    252:256:public void getChars(int,int,char[],int)
    259:267:final void insert0(int,char[])
    270:282:final void insert0(int,char[],int,int)
    286:293:final void insert0(int,char)
    296:309:final void insert0(int,java.lang.String)
    312:319:final void insert0(int,java.lang.CharSequence,int,int)
    329:340:private void move(int,int)
    343:369:final void replace0(int,int,java.lang.String)
    373:427:final void reverse0()
    435:439:public void setCharAt(int,char)
    448:459:public void setLength(int)
    467:475:public java.lang.String substring(int)
    526:526:public int indexOf(java.lang.String)
    538:569:public int indexOf(java.lang.String,int)
    581:581:public int lastIndexOf(java.lang.String)
    594:626:public int lastIndexOf(java.lang.String,int)
    634:639:public void trimToSize()
    650:653:public int codePointAt(int)
    665:668:public int codePointBefore(int)
    682:685:public int codePointCount(int,int)
    699:699:public int offsetByCodePoints(int,int)
    709:710:public com.badlogic.gdx.utils.StringBuilder append(boolean)
    861:862:public com.badlogic.gdx.utils.StringBuilder append(double)
    896:897:public com.badlogic.gdx.utils.StringBuilder append(char[])
    910:911:public com.badlogic.gdx.utils.StringBuilder append(char[],int,int)
    932:936:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder)
    954:958:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    968:969:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    980:981:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    991:992:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    1004:1005:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    1017:1018:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    1030:1031:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    1043:1044:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    1056:1057:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    1069:1070:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1082:1083:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1094:1095:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1107:1108:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1123:1124:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1137:1138:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1154:1155:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1168:1169:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1174:1182:public com.badlogic.gdx.utils.StringBuilder replace(java.lang.String,java.lang.String)
    1187:1196:public com.badlogic.gdx.utils.StringBuilder replace(char,java.lang.String)
    1204:1205:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TextFormatter
com.badlogic.gdx.utils.TimSort
com.badlogic.gdx.utils.TimeUtils:
    private static final long nanosPerMilli
    21:21:public TimeUtils()
    29:29:public static long millis()
    38:38:public static long nanosToMillis(long)
    45:45:public static long millisToNanos(long)
    52:52:public static long timeSinceNanos(long)
    59:59:public static long timeSinceMillis(long)
com.badlogic.gdx.utils.Timer
com.badlogic.gdx.utils.Timer$Task
com.badlogic.gdx.utils.Timer$TimerThread
com.badlogic.gdx.utils.UBJsonReader
com.badlogic.gdx.utils.UBJsonWriter
com.badlogic.gdx.utils.UBJsonWriter$JsonObject
com.badlogic.gdx.utils.XmlReader
com.badlogic.gdx.utils.XmlReader$Element
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.async.ThreadUtils:
    21:21:public ThreadUtils()
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.badlogic.gdx.utils.reflect.Annotation
com.badlogic.gdx.utils.reflect.ArrayReflection:
    21:21:public ArrayReflection()
    30:30:public static int getLength(java.lang.Object)
    35:35:public static java.lang.Object get(java.lang.Object,int)
    40:41:public static void set(java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.reflect.ClassReflection:
    23:23:public ClassReflection()
    28:30:public static java.lang.Class forName(java.lang.String)
    41:41:public static boolean isInstance(java.lang.Class,java.lang.Object)
    47:47:public static boolean isAssignableFrom(java.lang.Class,java.lang.Class)
    52:52:public static boolean isMemberClass(java.lang.Class)
    57:57:public static boolean isStaticClass(java.lang.Class)
    62:62:public static boolean isArray(java.lang.Class)
    68:72:public static java.lang.Object newInstance(java.lang.Class)
    78:83:public static com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class)
    113:118:public static com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class)
    125:129:public static varargs com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    135:140:public static com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class)
    146:150:public static varargs com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    156:161:public static com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class)
    167:171:public static com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String)
    177:182:public static com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class)
    188:192:public static com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String)
    198:198:public static boolean isAnnotationPresent(java.lang.Class,java.lang.Class)
    204:209:public static com.badlogic.gdx.utils.reflect.Annotation[] getAnnotations(java.lang.Class)
    215:217:public static com.badlogic.gdx.utils.reflect.Annotation getAnnotation(java.lang.Class,java.lang.Class)
    223:228:public static com.badlogic.gdx.utils.reflect.Annotation[] getDeclaredAnnotations(java.lang.Class)
    234:238:public static com.badlogic.gdx.utils.reflect.Annotation getDeclaredAnnotation(java.lang.Class,java.lang.Class)
    242:242:public static java.lang.Class[] getInterfaces(java.lang.Class)
com.badlogic.gdx.utils.reflect.Constructor:
    33:33:public java.lang.Class[] getParameterTypes()
    42:42:public boolean isAccessible()
com.badlogic.gdx.utils.reflect.Field
com.badlogic.gdx.utils.reflect.Method
com.badlogic.gdx.utils.reflect.ReflectionException:
    28:29:public ReflectionException(java.lang.String)
    32:33:public ReflectionException(java.lang.Throwable)
com.badlogic.gdx.utils.viewport.ExtendViewport
com.badlogic.gdx.utils.viewport.FillViewport
com.badlogic.gdx.utils.viewport.FitViewport
com.badlogic.gdx.utils.viewport.ScalingViewport
com.badlogic.gdx.utils.viewport.ScreenViewport
com.badlogic.gdx.utils.viewport.StretchViewport
com.badlogic.gdx.utils.viewport.Viewport
